do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v68=0;while true do if (v68==0) then v19=v0(v3(v20,1,1));return "";end end else local v69=v2(v0(v20,16));if v19 then local v76=v5(v69,v19);v19=nil;return v76;else return v69;end end end);local function v21(v22,v23,v24)if v24 then local v70=0;local v71;while true do if (v70==0) then v71=(v22/((5 -3)^(v23-1)))%((2 + 0)^(((v24-(1 + 0)) -(v23-(2 -1))) + (1 -0)));return v71-(v71%(1 -(1318 -(596 + 722))));end end else local v72=(824 -((2610 -2070) + 282))^(v23-1);return (((v22%(v72 + v72))>=v72) and ((996 -(495 + 500)) -0)) or (0 -0);end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + 2);v18=v18 + (1159 -(41 + 1116));return (v40 * (2019 -(1721 + 42))) + v39;end local function v27()local v41=0 -0;local v42;local v43;local v44;local v45;while true do if (v41==(0 + 0)) then v42,v43,v44,v45=v1(v16,v18,v18 + 1 + 2);v18=v18 + ((35 -23) -8);v41=1 -0;end if ((1501 -((904 -560) + 1156))==v41) then return (v45 * 16777216) + (v44 * ((62826 -(632 + 134)) + 3476)) + (v43 * (1347 -(513 + 578))) + v42;end end end local function v28()local v46=v27();local v47=v27();local v48=2 -1;local v49=(v21(v47,(4 -3) + (0 -0),45 -25) * ((2 + 0)^(56 -24))) + v46;local v50=v21(v47,382 -(173 + 188),19 + 12);local v51=((v21(v47,110 -78)==(1 + 0 + 0)) and  -(2 -(1661 -(1323 + 337)))) or (1809 -(1402 + 406));if (v50==(0 + 0)) then if (v49==(0 + 0)) then return v51 * (0 + 0);else v50=306 -(190 + 115);v48=1195 -((1625 -438) + 8);end elseif (v50==(1069 + (4293 -3315))) then return ((v49==(237 -(142 + 95))) and (v51 * ((1 + 0)/(0 + 0)))) or (v51 * NaN);end return v8(v51,v50-1023) * (v48 + (v49/((1 + 1)^(1612 -(1529 + 31)))));end local function v29(v30)local v52=0 + 0;local v53;local v54;while true do if ((875 -(505 + 368))==v52) then v54={};for v77=1, #v53 do v54[v77]=v2(v1(v3(v53,v77,v77)));end v52=8 -(3 + 2);end if (v52==(9 -6)) then return v6(v54);end if (v52==(1 + 0)) then v53=v3(v16,v18,(v18 + v30) -1);v18=v18 + v30;v52=2 + 0;end if (v52==(0 -0)) then v53=nil;if  not v30 then v30=v27();if (v30==((774 + 64) -(780 + 58))) then return "";end end v52=1 -0;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v55=28 -(18 + 10);local v56;local v57;local v58;local v59;local v60;local v61;local v62;local v63;while true do if (v55==0) then v56=0;v57=nil;v55=1;end if (v55~=(1184 -(1074 + 107))) then else v62=nil;v63=nil;v55=1 + 3;end if (v55==(208 -(34 + 170))) then while true do if (v56==(1 + 2)) then v63=nil;while true do local v101=0 -0;while true do if (v101==(1183 -(35 + 1147))) then if (v57~=1) then else local v107=0;local v108;while true do if (v107==(0 -0)) then v108=0;while true do if (v108==(0 + 0)) then local v117=0;while true do if (v117==(1327 -(360 + 967))) then v62=v27();v63={};v117=2 -1;end if (v117~=1) then else v108=1433 -(1269 + 163);break;end end end if (1==v108) then for v119=2 -1,v62 do local v120=0;local v121;local v122;local v123;while true do if (v120~=(2 -1)) then else v123=nil;while true do if (v121~=(0 -0)) then else local v183=0;while true do if ((0 -0)~=v183) then else v122=v25();v123=nil;v183=1;end if (v183==1) then v121=1 + 0;break;end end end if (v121~=1) then else if (v122==(1795 -(555 + 1239))) then v123=v25()~=(1940 -(589 + 1351));elseif (v122==2) then v123=v28();elseif (v122==3) then v123=v29();end v63[v119]=v123;break;end end break;end if (0==v120) then local v144=0;while true do if ((1 + 0)~=v144) then else v120=1 + 0;break;end if (v144~=0) then else v121=0;v122=nil;v144=1;end end end end end v61[459 -(253 + 203)]=v25();v108=2;end if (2==v108) then v57=2;break;end end break;end end end break;end if (v101~=(457 -(192 + 265))) then else local v106=0 -0;while true do if ((0 + 0)==v106) then if (v57==(0 + 0)) then local v111=114 -(16 + 98);local v112;while true do if (v111==(0 -0)) then v112=0;while true do if (v112~=(1586 -(690 + 895))) then else local v140=0 + 0;local v141;while true do if (v140==(733 -(531 + 202))) then v141=1267 -(308 + 959);while true do if (v141==0) then local v202=0 -0;while true do if (v202==1) then v141=52 -(47 + 4);break;end if (v202~=(0 -0)) then else v60={};v61={v58,v59,nil,v60};v202=543 -(108 + 434);end end end if (1==v141) then v112=969 -(961 + 6);break;end end break;end end end if (v112==0) then local v142=0 + 0;local v143;while true do if (v142==(0 + 0)) then v143=0 -0;while true do if (v143~=(354 -(117 + 236))) then else v112=1 + 0;break;end if (v143==0) then v58={};v59={};v143=1;end end break;end end end if (v112~=(2 + 0)) then else v57=1 + 0;break;end end break;end end end if (v57~=2) then else local v113=0;local v114;while true do if (v113==(0 + 0)) then v114=0;while true do local v124=0 -0;while true do if (v124==0) then if (v114~=(173 -(46 + 126))) then else for v185=180 -(165 + 14),v27() do v60[v185]=v27();end return v61;end if (v114~=(503 -(39 + 464))) then else local v180=0;while true do if (v180==(0 -0)) then for v203=1 + 0,v27() do local v204=0;local v205;local v206;while true do if ((59 -(15 + 44))~=v204) then else local v225=0;local v226;while true do if (v225~=0) then else v226=1238 -(58 + 1180);while true do if (v226==(1 + 0)) then v204=1;break;end if (v226==0) then local v238=0;while true do if (v238~=0) then else v205=0 + 0;v206=nil;v238=1;end if (1==v238) then v226=1;break;end end end end break;end end end if ((2 -1)==v204) then while true do if ((89 -(22 + 67))==v205) then v206=v25();if (v21(v206,1,1 + 0)==(0 + 0)) then local v233=0;local v234;local v235;local v236;local v237;while true do if (v233==(1 + 0)) then local v244=0;while true do if (v244==0) then local v247=802 -(103 + 699);while true do if (v247==(348 -(244 + 103))) then v244=1 + 0;break;end if (v247==(0 + 0)) then v236=nil;v237=nil;v247=1;end end end if (v244==(1023 -(1012 + 10))) then v233=2;break;end end end if (v233~=(1598 -(1561 + 37))) then else local v245=0;local v246;while true do if (v245~=(0 -0)) then else v246=0;while true do if (v246~=0) then else local v258=0 + 0;while true do if (v258==1) then v246=1;break;end if (v258==0) then v234=0 -0;v235=nil;v258=1;end end end if (v246~=(1 + 0)) then else v233=1;break;end end break;end end end if (v233==(3 -1)) then while true do if (v234==(1 + 0)) then local v248=0;while true do if (v248==(0 + 0)) then local v259=0 -0;while true do if ((2 -1)~=v259) then else v248=1 + 0;break;end if (v259==(0 -0)) then v237={v26(),v26(),nil,nil};if (v235==0) then local v260=267 -(121 + 146);local v261;local v262;while true do if (v260==0) then v261=1851 -(1010 + 841);v262=nil;v260=1;end if (v260==(2 -1)) then while true do if (0==v261) then v262=0 + 0;while true do if (v262==0) then v237[1680 -(842 + 835)]=v26();v237[4]=v26();break;end end break;end end break;end end elseif (v235==(1614 -(1340 + 273))) then v237[2 + 1]=v27();elseif (v235==(5 -3)) then v237[3]=v27() -(2^(496 -(427 + 53)));elseif (v235~=(3 + 0)) then else local v266=0;while true do if ((0 + 0)~=v266) then else v237[3]=v27() -(2^(3 + 13));v237[4 + 0]=v26();break;end end end v259=1;end end end if (v248==(152 -(28 + 123))) then v234=2;break;end end end if (v234~=(4 -1)) then else if (v21(v236,3,7 -4)==1) then v237[4]=v63[v237[4]];end v58[v203]=v237;break;end if (v234~=(2 + 0)) then else local v250=1794 -(982 + 812);local v251;local v252;while true do if ((1 + 0)~=v250) then else while true do if (0==v251) then v252=0;while true do if (v252==(1 + 0)) then v234=3;break;end if (v252~=(0 + 0)) then else local v263=0;while true do if (v263~=1) then else v252=1 -0;break;end if (v263==(1082 -(245 + 837))) then if (v21(v236,1106 -(171 + 934),1 + 0)~=1) then else v237[2]=v63[v237[100 -(70 + 28)]];end if (v21(v236,2 + 0,891 -(605 + 284))~=(1 + 0)) then else v237[3]=v63[v237[7 -4]];end v263=783 -(11 + 771);end end end end break;end end break;end if (v250==(0 + 0)) then v251=0;v252=nil;v250=1 + 0;end end end if ((373 -(258 + 115))~=v234) then else local v253=0;local v254;local v255;while true do if (v253==1) then while true do if (v254==0) then v255=0;while true do if (v255~=(0 -0)) then else v235=v21(v206,5 -3,658 -(287 + 368));v236=v21(v206,7 -3,6);v255=4 -3;end if (v255==1) then v234=1613 -(1029 + 583);break;end end break;end end break;end if (v253==0) then v254=0 -0;v255=nil;v253=1;end end end end break;end end end break;end end break;end end end for v207=1 + 0,v27() do v59[v207-(212 -(119 + 92))]=v33();end v180=153 -(64 + 88);end if (v180==(1 + 0)) then v114=2 -1;break;end end end break;end end end break;end end end v106=1826 -(258 + 1567);end if (v106~=1) then else v101=737 -(275 + 461);break;end end end end end break;end if (v56==(1 + 1)) then v61=nil;v62=nil;v56=3;end if (v56==1) then local v94=0;while true do if (v94==1) then v56=2;break;end if ((0 -0)==v94) then v59=nil;v60=nil;v94=1;end end end if (v56==0) then local v95=0;local v96;while true do if ((0 + 0)==v95) then v96=0 -0;while true do if (v96==(1455 -(875 + 579))) then v56=2 -1;break;end if ((0 + 0)==v96) then local v109=0;while true do if (v109==(1110 -(701 + 408))) then v96=1;break;end if (v109==0) then v57=0 + 0;v58=nil;v109=1;end end end end break;end end end end break;end if (v55~=2) then else v60=nil;v61=nil;v55=3 -0;end if (v55~=1) then else v58=nil;v59=nil;v55=1918 -(1314 + 602);end end end local function v34(v35,v36,v37)local v64=0;local v65;local v66;local v67;while true do if (v64==1) then v67=v35[3];return function(...)local v79=1;local v80= -1;local v81={...};local v82=v12("#",...) -1;local function v83()local v84=v65;local v85=v66;local v86=v67;local v87=v32;local v88={};local v89={};local v90={};for v97=0 + 0,v82 do if ((v97>=v86) or ((2179 + 2221)<819)) then v88[v97-v86]=v81[v97 + ((225 + 285) -(206 + 31 + (401 -129)))];else v90[v97]=v81[v97 + (1212 -(367 + 844))];end end local v91=(v82-v86) + (1 -0);local v92;local v93;while true do local v98=486 -(103 + 383);local v99;while true do if ((v98==(427 -(173 + 254))) or ((7190 -4849)==((1604 -(770 + 35)) + 634))) then v99=(45 -(22 + 23)) -0;while true do if (((5218 -(514 + (3036 -(638 + 1065))))>(1829 -(616 + 35))) and (v99==1)) then if ((2792>=(2655 -1984)) and (v93<=(220 -(184 + 19 + 6)))) then if ((v93<=(155 -((1002 -(614 + 340)) + 41 + 61))) or ((571 + 3807)>=4424)) then if ((v93<=(491 -(11 + 478))) or ((1141 + 1030)>(5772 -(1207 + 165)))) then if (((16774 -12904)>(282 + 551)) and (v93<=((0 -0) -(1172 -(368 + 804))))) then v90[v92[1406 -(799 + 605)]]=v90[v92[3]];elseif ((v93==(1 + 0)) or ((2076 -1188)>(14499 -11395))) then v90[v92[2]]={};else v90[v92[1337 -(1243 + 92)]][v92[3]]=v92[9 -5];end elseif ((v93<=(8 -5)) or (2010<=(2200 -(77 + 1460)))) then v79=v92[3 -0];elseif (((7025 -2496)>=(3204 -2099)) and (v93>(541 -(373 + (755 -591))))) then v90[v92[2]]=v90[v92[2 + 1]][v92[2 + 0 + 2]];else for v178=v92[1 + 1],v92[3] do v90[v178]=nil;end end elseif ((1470==(337 + 1133)) and (v93<=(1506 -(343 + 1155)))) then if (((888 + 1265)<=(3966 -(891 + 698))) and (v93<=((6 -3) + 3))) then do return;end elseif ((v93==(14 -7)) or ((4206 -(33 + 3))<((5550 -4059) -((2066 -(1285 + 306)) + (469 -(41 + 81)))))) then v90[v92[2]]();else v90[v92[5 -3]]=v92[1660 -(167 + 1490)];end elseif ((v93<=(5 + 4)) or ((335 + 1004)>=((17138 -11335) -3488))) then v90[v92[2 + 0]]=v34(v85[v92[350 -(267 + 80)]],nil,v37);elseif (((8135 -5279)<=4438) and (v93>(4 + 6))) then local v152=1380 -(955 + 425);local v153;local v154;while true do if (((0 -0)==v152) or ((2315 + 612)<=(4244 -1891))) then v153=0 + 0;v154=nil;v152=1363 -(313 + 1049);end if (((1 + 0 + 0)==v152) or ((1465 -(182 + 1078))>=(1658 -(862 + 232)))) then while true do if ((v153==(0 + 0)) or ((1601 -(938 + 437))>=((11076 -(20 + 1262)) -(1082 + 5309)))) then v154=v92[2];v90[v154](v90[v154 + (208 -((155 -45) + 97))]);break;end end break;end end else v90[v92[1687 -(672 + 1013)]]=v92[14 -11]~=(0 -0);end elseif (((662 + 3671)>(2389 -(862 + 205))) and (v93<=17)) then if ((v93<=(1092 -(90 + (3789 -2801)))) or ((602 + 3977)<(3926 -(66 + 725)))) then if ((v93<=(233 -(136 + (266 -181)))) or ((4689 -2204)>(7516 -3732))) then local v129=0;local v130;local v131;while true do if (((3816 -((915 -(162 + 375)) + 414))>=(5436 -3251)) and (v129==1)) then while true do if ((v130==(0 + (1821 -(1583 + 238)))) or ((581 + 1084)>(20419 -15677))) then v131=v92[178 -(151 + 25)];v90[v131]=v90[v131]();break;end end break;end if ((((2197 -1164) -668)<3407) and (((0 -0) + 0 + 0)==v129)) then v130=0;v131=nil;v129=1 -0;end end elseif ((v93>(24 -11)) or ((1806 -(67 + 338))>2108)) then local v156=0 -0;local v157;local v158;while true do if (((3809 + 153)>=173) and (v156==(1068 -(493 + (987 -412))))) then v157=0 + 0;v158=nil;v156=1 -0;end if (((8118 -3872)==4246) and (v156==1)) then while true do if (((3953 -934)>2809) and (v157==0)) then v158=v92[1 + 1];v90[v158](v13(v90,v158 + 1 + 0,v92[(1354 -(145 + 1203)) -3]));break;end end break;end end elseif ((v92[128 -(20 + 106)]==v90[v92[(6 -1) -1]]) or ((234 -174)==(4952 -(527 + 431)))) then v79=v79 + ((43 -(29 + 12)) -1);else v79=v92[3 + 0];end elseif (((1412 -587)==(56 + 769)) and (v93<=(26 -(5 + 6)))) then local v132=0;local v133;local v134;local v135;local v136;while true do if (((4493 -(65 + 1561))>=(4491 -2724)) and (v132==(1 + 0))) then v135=nil;v136=nil;v132=1968 -((2829 -(377 + 541)) + 55);end if (((0 -0)==v132) or ((61 + 1187)==3066)) then v133=0 -0;v134=nil;v132=1 + 0;end if ((v132==(2 + 0)) or ((3262 -2154)>(266 + 1161))) then while true do if ((v133==(1882 -(668 + 1213))) or (3015==(433 + 196))) then v136=nil;while true do if ((v134==(650 -(373 + 277))) or ((3607 -((232 -(41 + 182)) + 35))<(1189 -(67 + 909)))) then local v219=0 + 0;local v220;while true do if (((1460 -(679 + 218))<=(136 + (7320 -4977))) and (v219==((0 + 0) -0))) then v220=0;while true do if ((2970<=((13449 -8274) -(143 + 275 + 8))) and (v220==(1 + (0 -0)))) then v134=1 + 0;break;end if ((v220==(0 + 0)) or ((4612 + 126)<((593 + 1973) -(982 + 359)))) then local v230=0;while true do if (((4457 -(736 + 831))>=(60 + 401 + 1062)) and ((0 -(0 + 0))==v230)) then v135=v92[2 -0];v136=v90[v135];v230=1;end if (((2323 -((228 -69) + 517))<=((6709 -(1329 + 300)) -2829)) and (v230==(3 -2))) then v220=1385 -(172 + 1212);break;end end end end break;end end end if (((2402 + 1076)<=(5519 -(568 + 628))) and (v134==(2 -1))) then for v224=v135 + ((1 + 0) -0),v92[3] do v7(v136,v90[v224]);end break;end end break;end if ((v133==0) or ((3493 -2327)>(3593 -(452 + 861)))) then local v196=0;while true do if (((856 + 2113)==(13069 -10100)) and (v196==(3 -2))) then v133=1 + 0;break;end if (((2409 -(330 + 281))>=1430) and (v196==((0 + 0) -0))) then v134=0 -0;v135=nil;v196=864 -(571 + 292);end end end end break;end end elseif ((v93==(44 -28)) or ((3030 + 558)<(9183 -6796))) then if ((v90[v92[1 + (863 -(466 + 396))]]==v90[v92[(761 -(124 + 636)) + 3]]) or ((25 + 176)>=3852)) then v79=v79 + (2 -1);else v79=v92[5 -2];end else local v159=0;local v160;local v161;local v162;local v163;local v164;while true do if ((v159==(1365 -(996 + 367))) or ((2665 + 954)<2631)) then v164=nil;while true do if ((v160==(3 -1)) or (2769>=(223 + (2916 -(4 + 136))))) then for v221=v161,v80 do local v222=0 + 0;local v223;while true do if ((((4319 + 259) -(1466 + 224))==((5883 -(110 + 380)) -2505)) and (v222==(0 -0))) then v223=943 -(248 + 695);while true do if (((8401 -4489)==(3715 + 197)) and (v223==(0 + (0 -0)))) then v164=v164 + (2 -1);v90[v221]=v162[v164];break;end end break;end end end break;end if ((v160==1) or ((3369 + 769)<=(1398 + 206))) then local v211=267 -(61 + 206);while true do if (((4317 -3307)==((2603 -(625 + 619)) -((139 -69) + 279))) and (v211==(2 -1))) then v160=4 -2;break;end if ((v211==(0 + 0)) or ((22533 -(4488 + 13253))>(6435 -(444 + 1044)))) then local v227=1639 -(214 + 1425);while true do if (((4688 -(5 + 79 + 508))==(6034 -(228 + 1710))) and (v227==(0 -0))) then v80=(v163 + v161) -(2 -1);v164=0 + (0 -0);v227=(1459 + 480) -(116 + 1822);end if ((v227==1) or ((2732 -(591 + 1307))>=(866 + 588))) then v211=1 + 0;break;end end end end end if ((1515<=(3647 -(284 + 461))) and (v160==(0 -0))) then local v212=0;local v213;while true do if ((v212==(0 -0)) or (((2801 -(1197 + 481)) -672)>=2739)) then v213=(438 -(343 + 95)) -(1378 -(1358 + 20));while true do if ((v213==(1 -0)) or ((1476 + 1407)<=((4376 -3411) -541))) then v160=2 -1;break;end if (((0 + 0)==v213) or (((1019 + 637) -(23 + 3))>=(2635 + 731 + 77))) then local v228=0 + 0;while true do if ((4659>(287 + 1050)) and (v228==1)) then v213=2 -1;break;end if ((v228==(0 -0)) or ((1287 + 352)==(725 + 120))) then v161=v92[(6761 -5248) -(340 + 1171)];v162,v163=v87(v90[v161](v13(v90,v161 + 1 + 0,v92[(2 + 4) -3])));v228=1;end end end end break;end end end end break;end if ((v159==(4 -3)) or (4642<(6300 -3539))) then local v187=1878 -(1585 + 293);while true do if ((v187==1) or (3689==(4808 -3011))) then v159=8 -(1513 -(989 + 518));break;end if ((v187==(1366 -(316 + 1050))) or ((3916 + 721)<=(727 + 1979))) then v162=nil;v163=nil;v187=1;end end end if ((v159==0) or (276>=(5403 -(1880 + 35)))) then local v188=901 -(119 + 782);while true do if ((v188==(0 -0)) or ((4298 -(1325 + 340))==431)) then v160=0;v161=nil;v188=1 -0;end if ((1==v188) or ((1766 + 1606)>(7253 -3834))) then v159=1;break;end end end end end elseif (((2432 + 165)<(2097 + 584)) and (v93<=(11 + 9))) then if ((v93<=(22 -4)) or ((2841 -1974)>=(3889 -2664))) then if ((v90[v92[6 -(3 + 1)]]==v92[719 -(170 + 545)]) or ((3178 -(1221 + 67))>=2308)) then v79=v79 + (3 -(4 -2));else v79=v92[1377 -(1027 + 347)];end elseif ((v93>(29 -10)) or ((446 + 98)>2000)) then local v166=0 -0;local v167;local v168;local v169;while true do if ((v166==1) or (777>(5488 -(538 + 804)))) then v169=v92[4 -1];for v197=1 + 0,v169 do v168[v197]=v90[v167 + v197];end break;end if (((2214 -(650 + 265))<=(3925 -(547 + 358))) and (v166==(0 -0))) then v167=v92[2];v168=v90[v167];v166=1624 -(8 + (1777 -(54 + 108)));end end else local v170=0 + 0;local v171;while true do if ((((10783 -7204) + 48)>(3434 -(345 + 971))) and (v170==0)) then v171=v92[752 -(235 + 515)];v90[v171]=v90[v171](v13(v90,v171 + (2 -1),v92[1123 -(385 + 735)]));break;end end end elseif (((4095 -(1171 + 555))==((6071 -(1663 + 306)) -(449 + 1284))) and (v93<=((1925 -(16 + 121)) -(1111 + 656)))) then local v137=0;local v138;local v139;while true do if ((((2914 + 408) -(344 + 350))==(1359 + 1269)) and (v137==1)) then while true do if ((v138==(1276 -(486 + 790))) or ((1516 + 218)==(134 + 1464 + 1064))) then v139=v92[2 + 0];v90[v139]=v90[v139](v13(v90,v139 + 1,v80));break;end end break;end if (((1299 + 3684)>=(16985 -13161)) and (v137==(0 -0))) then v138=0 + 0;v139=nil;v137=1 + 0;end end elseif ((1292==(3894 -2602)) and (v93==22)) then v90[v92[3 -1]]=v37[v92[3]];else local v174=0 + (0 -0);local v175;local v176;local v177;while true do if (((1720 -572)<3317) and (v174==(0 + 0))) then v175=0;v176=nil;v174=1 + (0 -0);end if ((v174==(1 + 0)) or (((644 + 1335) -((57 -14) + 393))<=(3694 -2170))) then v177=nil;while true do if ((v175==(0 + 0)) or (((335 -(88 + 41)) + 233)>=(2545 -(9 + 5)))) then local v214=1937 -(1698 + 239);local v215;while true do if ((v214==0) or ((11496 -7125)<=(5990 -(591 + 1401)))) then v215=0;while true do if ((3123==(3493 -(101 + 269))) and (v215==0)) then local v229=0 + 0;while true do if ((v229==(0 + 0 + 0)) or ((1353 -(593 + 16))>=(1416 + 370))) then v176=v92[(3 -2) + 1];v177=v90[v92[12 -9]];v229=1095 -(590 + 504);end if (((790 -(69 + 280))==(126 + 315)) and (v229==(1 + 0))) then v215=1;break;end end end if (((5231 -(64 + 1114))<(4948 -((1335 -(802 + 448)) + 275))) and (v215==(1 + 0))) then v175=853 -(468 + 384);break;end end break;end end end if ((292<=(6146 -((1829 -(302 + 333)) + 509))) and (v175==(4 -(5 -2)))) then v90[v176 + (4 -3)]=v177;v90[v176]=v177[v92[(2178 -(1622 + 208)) -(173 + 171)]];break;end end break;end end end v79=v79 + (2 -1);break;end if ((v99==(0 + 0)) or ((3085 + 1377 + 285)==((3268 -(696 + 1040)) + 3090))) then local v110=0 -0;while true do if (((2661 -(112 + 1579))==(1057 -(74 + 13))) and (v110==(1 + 0))) then v99=1441 -(483 + 957);break;end if (((634 -(213 + 24))<=(1111 + 580 + 1135)) and (v110==(0 -0))) then v92=v84[v79];v93=v92[310 -(242 + 67)];v110=1 -0;end end end end break;end end end end A,B=v32(v11(v83));if  not A[1] then local v100=v35[4][v79] or "?";error("Script error at ["   .. v100   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end if (v64==0) then v65=v35[1];v66=v35[2];v64=1;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
