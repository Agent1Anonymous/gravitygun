do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;while true do if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (v0==0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end if (v0==5) then v15=function(v23,v24,...)local v25=0;local v26;local v27;local v28;local v29;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;while true do if (2==v25) then v30=function()local v46,v47=v2(v23,v26,v26 + 2 + 0);v26=v26 + 1 + 1;return (v47 * (793 -537)) + v46;end;v31=nil;v31=function()local v48=(2353 -(294 + 91)) -(1456 + 512);local v49;local v50;local v51;local v52;while true do if ((2 -1)==v48) then return (v52 * 16777216) + (v51 * (4746 + 60790)) + (v50 * 256) + v49;end if (v48==(0 + 0)) then v49,v50,v51,v52=v2(v23,v26,v26 + 3);v26=v26 + (6 -(7 -5));v48=1 + 0;end end end;v32=nil;v25=3;end if (v25==5) then v37=nil;v37=function(v38,v39,v40)local v53=0;local v54;local v55;local v56;while true do if (v53==1) then v56=v38[3];return function(...)local v83=0;local v84;local v85;local v86;local v87;local v88;while true do if (3==v83) then A,B=v35(v11(v88));if  not A[1] then local v89=v38[4][v84] or "?";error("Script error at ["   .. v89   .. "]:"   .. A[2]);else return v13(A,2,B);end break;end if (2==v83) then v88=nil;v88=function()local v90=v54;local v91=v55;local v92=v56;local v93=v35;local v94={};local v95={};local v96={};for v101=881 -(57 + 824),v87 do if ((v101>=v92) or (216>(11589 -9268))) then v94[v101-v92]=v86[v101 + 1 + 0];else v96[v101]=v86[v101 + (1 -0) + 0];end end local v97=(v87-v92) + 1;local v98;local v99;while true do local v102=0;local v103;local v104;while true do if (((1412 + 1137)>(1503 -(505 + 101 + 477))) and (v102==(1217 -(266 + 950)))) then while true do if (((1044 -((1745 -(1104 + 557)) + 191))>((895 -675) + 122)) and (v103==(0 + 0))) then v104=0 -0;while true do if (((2205 -1403)>128) and (v104==(0 -0))) then local v131=0 -0;while true do if (((2752 + 134)<(4971 -((1292 -954) + 1385))) and (v131==(2 -1))) then v104=1 -0;break;end if (((2771 -(562 + 163 + 819))<(14985 -10812)) and (((4401 -3204) -(1036 + 161))==v131)) then v98=v90[v84];v99=v98[1 -0];v131=3 -2;end end end if (((2175 -1354)<4094) and (v104==1)) then if ((v99<=(435 -((1394 -(1039 + 335)) + (1893 -(1104 + 385))))) or (3093<=(3452 -929))) then if (((935 + 968)==1903) and (v99<=(9 -4))) then if (((6238 -2542)==(8136 -4440)) and (v99<=(2 + 0))) then if (((186 + 33)==(212 + 7)) and (v99<=(0 + 0))) then v96[v98[1 + 1]]=v98[3]~=(376 -(114 + 262));elseif ((v99>((1 -0) -0)) or (4740<=(896 -448))) then local v159=0;local v160;local v161;local v162;while true do if (((5801 -4570)>((3690 -(895 + 754)) -(48 + 1383))) and (v159==((0 -0) -0))) then v160=0 -0;v161=nil;v159=1;end if ((v159==1) or (4885<=542)) then v162=nil;while true do if ((v160==(1548 -(197 + (1982 -(539 + 93))))) or ((335 + 1055)<=((915 -663) + 662))) then while true do if ((v161==(0 + 0)) or ((51 + 1129)==((2055 -390) + 413))) then v162=v98[2];v96[v162](v96[v162 + (1610 -(620 + (1627 -(80 + 558))))]);break;end end break;end if ((v160==(0 + (967 -(284 + 683)))) or ((12481 -7643)<(5585 -2466))) then v161=1592 -(1384 + 208);v162=nil;v160=(1 + 0) -(0 -0);end end break;end end else v96[v98[2 + 0]][v98[3 + 0]]=v98[8 -(458 -(201 + 253))];end elseif ((1055<(4574 -((3811 -2073) + 225))) and (v99<=(1 + 2))) then v96[v98[2]]=v37(v91[v98[(28 -20) -5]],nil,v40);elseif ((v99>(14 -(359 -(190 + 159)))) or ((577 + 3470)<((7644 -(649 + 637)) -4168))) then v84=v98[894 -(280 + 611)];else v96[v98[1662 -(828 + 832)]]=v96[v98[458 -((1051 -(554 + 291)) + 168 + 81)]][v98[(753 -(29 + 13)) -(666 + 41)]];end elseif ((1983==(3723 -(1001 + 630 + (478 -(120 + 249))))) and (v99<=(14 -6))) then if (((3829 -(2104 -(4 + 64)))<=(64 + 8 + 4864)) and (v99<=6)) then v96[v98[2]]=v98[1004 -(156 + 845)];elseif (((6115 -(569 + 871))>=(361 + 1338)) and (v99>((20 + 2) -15))) then if ((v96[v98[1301 -(1291 + 8)]]==v96[v98[4 + 0]]) or (((74 + 5771) -((2278 -1657) + 475))<=(2033 + 1296))) then v84=v84 + (852 -(289 + (1636 -1074)));else v84=v98[3];end else local v168=1185 -(1008 + 177);local v169;local v170;while true do if ((v168==(2 -(2 -1))) or (3675==(8157 -3670))) then while true do if (((1676 -(453 + 67))==(342 + 814)) and (v169==0)) then v170=v98[4 -2];v96[v170]=v96[v170](v13(v96,v170 + (21 -(9 + 11)),v98[(7 -2) -(1 + 1)]));break;end end break;end if ((0==v168) or ((2195 -965)==(4467 -(120 + 176 + 1485)))) then v169=0;v170=nil;v168=1 + 0 + 0;end end end elseif (((2527 -1617)<(4898 -(1046 + 438))) and (v99<=(2 + (15 -8)))) then v96[v98[1 + 1]]();elseif (((6328 -(973 + 657))>=281) and (v99==(495 -(326 + 159)))) then v96[v98[2 -0]]=v96[v98[2 + 1]];else local v173=0;local v174;local v175;while true do if (((3516 + 712)>(1741 -(48 + 425 + 55))) and (v173==(1 + 0))) then while true do if ((v174==(199 -(45 + 154))) or ((1630 -(1360 + 101))>(7326 -2679))) then v175=v98[2];v96[v175](v13(v96,v175 + (39 -(20 + 18)),v98[3 + 0]));break;end end break;end if (((68 + 41)<=(1766 + 2643)) and (v173==((1333 -(420 + 913)) + 0))) then v174=0 + 0;v175=nil;v173=(161 -(159 + 1)) -0;end end end elseif (((3040 + 149)<(5888 -(437 + 879))) and (v99<=17)) then if ((v99<=(36 -22)) or ((3440 -(429 + 266 + 29))>=(14077 -9435))) then if (((1468 + 3247)==(2149 + 2566)) and (v99<=(1545 -(1418 + 115)))) then local v147=(1467 -(751 + 297)) -(224 + 195);local v148;local v149;while true do if ((v147==(1 + 0)) or ((37 + 2560)<=1338)) then while true do if ((((0 + 0) -0)==v148) or ((3227 -(337 + 88))==(219 + 1539))) then v149=v98[339 -(97 + 240)];v96[v149]=v96[v149]();break;end end break;end if ((v147==(0 + 0)) or ((5162 -(105 + 77))<=(3067 -2203))) then v148=1300 -(985 + 271 + 44);v149=nil;v147=1 + 0;end end elseif ((v99==((58 -33) -12)) or ((5344 -(810 + 1166))>=(4245 -(59 + 773)))) then local v176=0 -(0 + 0);local v177;local v178;local v179;while true do if ((1==v176) or ((6046 -3251)>=(3605 + 28))) then v179=nil;while true do if ((((4582 -2899) -1113)<=((26632 -21254) -(418 + (1443 -896)))) and ((463 -(23 + 439))==v177)) then v96[v178 + (1 -0)]=v179;v96[v178]=v179[v98[7 -(387 -(370 + 14))]];break;end if ((v177==(0 -0)) or ((238 + 1526 + 648)<=(2957 -1536))) then local v228=(0 -0) -0;while true do if ((4089<=4387) and (v228==(0 -0))) then local v236=(0 -0) + 0;while true do if (((1281 -(203 + 117))>=(1459 -(1252 + 51))) and (v236==(1 + 0))) then v228=1;break;end if ((v236==(0 + 0)) or (((5849 -(408 + 542)) -(4362 -(928 + 561)))<=((720 + 127) -656))) then v178=v98[4 -2];v179=v96[v98[(5 -2) -(0 + 0)]];v236=1 -0;end end end if (((11381 -7584)>=(4649 -(120 + 1239))) and ((239 -(24 + 214))==v228)) then v177=1;break;end end end end break;end if ((v176==(0 + (46 -(4 + 42)))) or ((8184 -5133)>=(3682 -(396 + 170)))) then local v209=(0 + 0) -0;while true do if ((v209==((729 -(662 + 67)) + 0)) or ((4859 -2732)>(3314 + 955))) then v177=0 -0;v178=nil;v209=1439 -(820 + (861 -243));end if (((41 + 3)<=((3040 -(1095 + 903)) + 129)) and (v209==(2 -(3 -2)))) then v176=1 + 0;break;end end end end else for v192=v98[7 -5],v98[3] do v96[v192]=nil;end end elseif (((2321 + 1656)>224) and (v99<=(9 + (11 -5)))) then local v150=0 + (328 -(277 + 51));local v151;local v152;local v153;while true do if ((v150==(0 -0)) or (2582>=(1626 + 1249))) then local v194=0 -0;while true do if (((3565 -1581)<(5988 -(2770 + 887))) and (v194==((143 + 420) -(47 + (787 -(250 + 22)))))) then v150=1;break;end if ((v194==(0 -0)) or ((3763 -(362 + 41))<=(47 + 1278))) then v151=v98[5 -3];v152=v96[v151];v194=1 + (127 -(4 + 123));end end end if (((8257 -4376)==(4855 -(428 + 546))) and (v150==1)) then v153=v98[(1988 -(1624 + 363)) + 1 + 1];for v201=1 + 0,v153 do v152[v201]=v96[v151 + v201];end break;end end elseif ((v99==((258 -(233 + 19)) + 3 + 7)) or ((126 + 2)>=((2393 -(237 + 206)) + 549))) then v96[v98[259 -(76 + (1790 -(875 + 734)))]]={};else do return;end end elseif ((v99<=(66 -(92 -46))) or (((1160 -(6 + 6)) + 675)<(1917 -(404 + 112 + 37)))) then if (((5018 -(414 + 558))>=((7322 + 507) -5885)) and (v99<=((41 + 10) -33))) then local v154=0 + 0;local v155;while true do if ((v154==(0 + 0)) or ((2687 + 484)<=(436 + 2347))) then v155=v98[2 + 0];v96[v155]=v96[v155](v13(v96,v155 + 1 + 0,v85));break;end end elseif ((v99==(515 -(276 + 220))) or ((2850 + (2612 -(395 + 247)))==((2509 -(891 + 121)) + 3322))) then v96[v98[1892 -((2342 -(478 + 1056)) + 1082)]]=v40[v98[3 + 0]];else local v183=0 -0;local v184;local v185;local v186;local v187;while true do if (((594 -361)==((1443 -861) -349)) and (v183==(0 + 0))) then local v210=(2916 -1646) -((2369 -(246 + 1637)) + 784);while true do if ((2991==(6564 -3573)) and (v210==1)) then v183=1;break;end if ((v210==(1665 -(180 + 1485))) or ((6117 -3077)<=2796)) then v184=v98[4 -2];v185,v186=v93(v96[v184](v13(v96,v184 + (1 -0),v98[609 -(160 + (1604 -(156 + 1002)))])));v210=1 -0;end end end if ((((1457 -(193 + 868)) + 457)==853) and (v183==2)) then for v215=v184,v85 do local v216=1495 -(154 + 1341);while true do if (((257 + 3676)>=3468) and (v216==(0 + 0))) then v187=v187 + (2 -(1 + 0));v96[v215]=v185[v187];break;end end end break;end if (((1780 -(918 + 861))==v183) or ((551 + 181)>=(4013 -1837))) then v85=(v186 + v184) -(1 + 0);v187=0 -0;v183=736 -(92 + 599 + 43);end end end elseif (((409 + 1674)<(4584 -(153 + 56))) and (v99<=((2 -1) + (873 -(455 + 398))))) then local v156=0 + 0;local v157;local v158;while true do if ((((5670 -(871 + 174)) -(105 + (642 -(312 + 109))))<(3479 + 838)) and (v156==(1 + 0))) then for v204=v157 + (1867 -(1737 + 129)),v98[319 -(204 + 112)] do v8(v158,v96[v204]);end break;end if ((v156==(0 + 0)) or ((28 + 67 + 300)>(3898 -(12 + 15 + 451)))) then v157=v98[925 -((2494 -(1851 + 75)) + 355)];v158=v96[v157];v156=1085 -(104 + 628 + 352);end end elseif ((3073==3073) and (v99>22)) then if ((v96[v98[(1630 -(1192 + 431)) -5]]==v98[6 -2]) or (4081<=1224)) then v84=v84 + (799 -((237 -169) + 730));else v84=v98[4 -1];end elseif ((v98[248 -(10 + (1513 -(631 + 646)))]==v96[v98[4 + 0]]) or (((8112 -6043) + 664)<=(910 + (1383 -(123 + 139))))) then v84=v84 + (2 -1);else v84=v98[(1920 -(1556 + 362)) + 1];end v84=v84 + (367 -(260 + 106));break;end end break;end end break;end if (((4097 -(1382 + 94))<(1509 + 1281)) and ((0 -(0 + 0))==v102)) then v103=0 -0;v104=nil;v102=1 + 0;end end end end;v83=3;end if (0==v83) then v84=1;v85= -1;v83=1;end if (1==v83) then v86={...};v87=v12("#",...) -1;v83=2;end end end;end if (v53==0) then v54=v38[1];v55=v38[2];v53=1;end end end;return v37(v36(),{},v24)(...);end if (v25==1) then v28=function(v41,v42,v43)if v43 then local v73=0 -0;local v74;while true do if (v73==(462 -(180 + 282))) then v74=(v41/((1538 -(97 + 1439))^(v42-(1 + (1330 -(833 + 497))))))%((1498 -(1133 + 363))^(((v43-(1193 -(769 + 423))) -(v42-(990 -((134 -49) + 904)))) + 1 + 0));return v74-(v74%(1 + 0));end end else local v75=2^(v42-(2 -1));return (((v41%(v75 + v75))>=v75) and (1 -0)) or (0 + 0);end end;v29=nil;v29=function()local v57=v2(v23,v26,v26);v26=v26 + 1;return v57;end;v30=nil;v25=2;end if (v25==0) then v26=1;v27=nil;v23=v5(v4(v23,5),"..",function(v44)if (v2(v44,2)==79) then v27=v1(v4(v44,1,1));return "";else local v76=v3(v1(v44,16));if v27 then local v80=v6(v76,v27);v27=nil;return v80;else return v76;end end end);v28=nil;v25=1;end if (v25==3) then v32=function()local v58=0 + 0;local v59;local v60;while true do if (v58==0) then v59=v31();v60=v31();v58=1346 -(643 + (2868 -2166));end if (((1219 -(974 + 244)) + 0)==v58) then return (( -2 * v28(v60,112 -80)) + 1) * ((423 -(41 + (1062 -682)))^(v28(v60,(48 -29) + 2,103 -72) -(951 + 72))) * ((((v28(v60,1,20 + 0) * ((4 -(1227 -(452 + 773)))^(1571 -(1439 + (544 -(42 + 402)))))) + v59)/((2 + 0)^(1390 -(265 + 1073)))) + (2 -1));end end end;v33=nil;v33=function(v45)local v61;if  not v45 then v45=v31();if (v45==(0 -0)) then return "";end end v61=v4(v23,v26,(v26 + v45) -1);v26=v26 + v45;local v62={};for v71=318 -(272 + 45), #v61 do v62[v71]=v3(v2(v4(v61,v71,v71)));end return v7(v62);end;v34=v31;v25=4;end if (v25==4) then v35=nil;v35=function(...)return {...},v12("#",...);end;v36=nil;v36=function()local v63=0 -0;local v64;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v63==1) then v66=nil;v67=nil;v63=129 -(105 + 22);end if (v63~=2) then else v68=nil;v69=nil;v63=7 -4;end if (v63~=(1454 -(1282 + 169))) then else v70=nil;while true do local v81=0;local v82;while true do if (v81~=0) then else v82=0;while true do if (v82==0) then local v100=0 + 0;while true do if (v100==(1 + 0)) then v82=1;break;end if (v100==0) then if (v64==3) then local v112=0;while true do if (v112==0) then for v122=1,v31() do v66[v122-(1 + 0)]=v36();end for v124=1 + 0,v31() do v67[v124]=v31();end v112=1;end if (v112==1) then return v68;end end end if ((0 -0)~=v64) then else local v113=0 + 0;local v114;while true do if (v113~=(0 + 0)) then else v114=0 + 0;while true do if (v114==0) then local v132=0 + 0;while true do if (v132~=1) then else v114=1;break;end if (v132~=0) then else v65={};v66={};v132=1;end end end if (v114~=1) then else v67={};v64=760 -(46 + 713);break;end end break;end end end v100=1;end end end if (v82~=(1 + 0)) then else if (v64~=(568 -(16 + 551))) then else local v105=413 -(228 + 185);local v106;while true do if (v105~=0) then else v106=0 -0;while true do if ((2 -1)==v106) then v70={};v64=2;break;end if (v106~=(1436 -(1012 + 424))) then else v68={v65,v66,nil,v67};v69=v31();v106=1 + 0;end end break;end end end if ((1 + 1)~=v64) then else local v107=0;while true do if (v107==(1441 -(46 + 1395))) then local v115=0;while true do if (v115==(4 -3)) then v107=1 + 0;break;end if (v115~=0) then else for v126=4 -3,v69 do local v127=0;local v128;local v129;local v130;while true do if (v127==1) then v130=nil;while true do if (v128~=(940 -(285 + 655))) then else local v137=0;while true do if ((0 -0)==v137) then v129=v29();v130=nil;v137=2 -1;end if ((1 + 0)==v137) then v128=1 + 0;break;end end end if (v128~=1) then else if (v129==1) then v130=v29()~=0;elseif (v129==2) then v130=v32();elseif (v129==3) then v130=v33();end v70[v126]=v130;break;end end break;end if (v127==0) then local v133=0 -0;while true do if (1==v133) then v127=1;break;end if (v133~=0) then else v128=0 -0;v129=nil;v133=1543 -(1127 + 415);end end end end end v68[788 -(773 + 12)]=v29();v115=1 + 0;end end end if (v107~=(1 + 0)) then else for v116=1,v31() do local v117=0 -0;local v118;local v119;local v120;while true do if (v117~=(1 + 0)) then else v120=nil;while true do if (v118==(0 + 0)) then local v134=0 + 0;while true do if (v134~=(1 + 0)) then else v118=2 -1;break;end if (v134==(1773 -(143 + 1630))) then v119=0 -0;v120=nil;v134=1 + 0;end end end if (v118~=(1 + 0)) then else while true do if (v119==0) then v120=v29();if (v28(v120,1479 -(1413 + 65),1730 -(636 + 1093))~=0) then else local v139=0;local v140;local v141;local v142;while true do if (v139~=(1 + 0)) then else local v188=0 + 0;while true do if (v188~=0) then else v142={v30(),v30(),nil,nil};if (v140==(0 + 0)) then local v217=0;while true do if (v217==0) then v142[3 + 0]=v30();v142[1345 -(1187 + 154)]=v30();break;end end elseif (v140==(1 + 0)) then v142[1 + 2]=v31();elseif (v140==(3 -1)) then v142[1 + 2]=v31() -((414 -(162 + 250))^(1260 -(239 + 1005)));elseif (v140==3) then local v238=0;local v239;while true do if (v238==(1341 -(269 + 1072))) then v239=0 -0;while true do if (v239==(0 -0)) then v142[8 -5]=v31() -(2^16);v142[4]=v30();break;end end break;end end end v188=1;end if (v188==(3 -2)) then v139=2 -0;break;end end end if (v139==(1 + 1)) then local v189=0 + 0;while true do if (v189~=(1610 -(1269 + 340))) then else v139=3;break;end if (v189==(0 -0)) then if (v28(v141,1283 -(541 + 741),224 -(26 + 197))==(50 -(12 + 37))) then v142[2]=v70[v142[2]];end if (v28(v141,2,2 + 0)==1) then v142[6 -3]=v70[v142[3]];end v189=1;end end end if (v139==(0 + 0)) then local v190=0 + 0;while true do if (v190==1) then v139=1;break;end if (v190~=0) then else v140=v28(v120,2 + 0,3);v141=v28(v120,1 + 3,6);v190=1 + 0;end end end if (v139~=(1 + 2)) then else if (v28(v141,3,1348 -(274 + 1071))~=1) then else v142[4]=v70[v142[4]];end v65[v116]=v142;break;end end end break;end end break;end end break;end if (v117~=0) then else v118=970 -(513 + 457);v119=nil;v117=3 -2;end end end v64=7 -4;break;end end end break;end end break;end end end break;end if (v63~=(0 -0)) then else v64=0 + 0;v65=nil;v63=1;end end end;v25=5;end end end;vv9(),...);break;end if (v0==2) then v7=table.concat;v8=table.insert;v9=getfenv or function()return _ENV;end;v0=3;end if (v0==4) then v13=unpack or table.unpack;v14=tonumber;v15=nil;v0=5;end if (v0==3) then v10=setmetatable;v11=pcall;v12=select;v0=4;end end end
