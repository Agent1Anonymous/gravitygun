do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then v19=v0(v3(v20,1,1));return "";else local v72=v2(v0(v20,16));if v19 then local v77=v5(v72,v19);v19=nil;return v77;else return v72;end end end);local function v21(v22,v23,v24)if v24 then local v73=0 -0;local v74;while true do if (v73==(0 + 0)) then v74=(v22/((2 + 0)^(v23-(2 -1))))%(((1 + 5) -4)^(((v24-(2 -1)) -(v23-(1 + 0))) + 1));return v74-(v74%(3 -2));end end else local v75=(0 -0) + (0 -0);local v76;while true do if (v75==(0 -0)) then v76=(1 + 1)^(v23-1);return (((v22%(v76 + v76))>=v76) and 1) or (0 -0);end end end end local function v25()local v38=v1(v16,v18,v18);v18=v18 + 1;return v38;end local function v26()local v39,v40=v1(v16,v18,v18 + (1067 -(489 + 576)));v18=v18 + 2;return (v40 * (578 -322)) + v39;end local function v27()local v41,v42,v43,v44=v1(v16,v18,v18 + (9 -6));v18=v18 + (6 -2);return (v44 * 16777216) + (v43 * (226152 -160616)) + (v42 * (1843 -((1464 -913) + 1036))) + v41;end local function v28()local v45=v27();local v46=v27();local v47=17 -(10 + 6);local v48=(v21(v46,4 -3,5 + 15) * (((781 -(161 + 618)) + 0)^(25 + 7))) + v45;local v49=v21(v46,5 + 16,24 + 7);local v50=((v21(v46,(61 + 10) -(32 + 7))==(1 + 0)) and  -(1 -0)) or (1712 -(383 + 1328));if (v49==(0 -0)) then if (v48==0) then return v50 * (1510 -(645 + 865));else v49=2 -1;v47=0 + 0;end elseif (v49==((4696 -(1120 + 649)) -880)) then return ((v48==((3449 -2077) -(814 + 558))) and (v50 * (1/(0 + 0)))) or (v50 * NaN);end return v8(v50,v49-(2253 -(1140 + 90))) * (v47 + (v48/(2^52)));end local function v29(v30)local v51=0;local v52;local v53;while true do if (v51==(3 -(1002 -(299 + 703)))) then return v6(v53);end if ((0 -0)==v51) then v52=nil;if  not v30 then v30=v27();if (v30==(0 -0)) then return "";end end v51=1015 -(13 + 1001);end if (v51==2) then v53={};for v78=1 + 0, #v52 do v53[v78]=v2(v1(v3(v52,v78,v78)));end v51=(1070 -(482 + 585)) + (0 -0);end if (v51==(2 -1)) then v52=v3(v16,v18,(v18 + v30) -(1 -0));v18=v18 + v30;v51=3 -1;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v54=0;local v55;local v56;local v57;local v58;local v59;local v60;local v61;local v62;while true do if ((0 -0)~=v54) then else v55=0;v56=nil;v54=1228 -(1171 + 56);end if (v54==(1 + 1)) then v59=nil;v60=nil;v54=3;end if (v54==4) then while true do if (v55==(557 -(549 + 5))) then v62=nil;while true do local v96=0;local v97;while true do if (v96==(0 -0)) then v97=0 -0;while true do if ((1 -0)==v97) then if (v56~=0) then else local v105=0;while true do if (v105==(969 -(149 + 818))) then v56=1;break;end if (v105==(1053 -(737 + 316))) then v57={};v58={};v105=1 + 0;end if ((452 -(119 + 332))~=v105) then else v59={};v60={v57,v58,nil,v59};v105=2;end end end break;end if (v97==0) then local v104=0 -0;while true do if (v104~=(776 -(484 + 291))) then else v97=1;break;end if (v104==(634 -(413 + 221))) then if (v56==1) then local v106=0;while true do if (v106==0) then v61=v27();v62={};v106=1238 -(88 + 1149);end if (v106==(4 -2)) then v56=1114 -(8 + 1104);break;end if (v106~=(1 + 0)) then else for v132=1,v61 do local v133=0 + 0;local v134;local v135;local v136;while true do if (v133~=(1356 -(397 + 959))) then else local v180=0;while true do if (v180==1) then v133=1765 -(1296 + 468);break;end if (v180==0) then v134=856 -(57 + 799);v135=nil;v180=1 + 0;end end end if (v133==(1 + 0)) then v136=nil;while true do if (v134~=1) then else if (v135==1) then v136=v25()~=(0 + 0);elseif (v135==(2 + 0)) then v136=v28();elseif (v135~=3) then else v136=v29();end v62[v132]=v136;break;end if (v134~=0) then else local v196=1436 -(1198 + 238);while true do if (v196==(0 -0)) then local v207=1277 -(82 + 1195);local v208;while true do if (v207==(1043 -(957 + 86))) then v208=819 -(162 + 657);while true do if (v208~=(340 -(31 + 309))) then else v135=v25();v136=nil;v208=2 -1;end if (v208==1) then v196=3 -2;break;end end break;end end end if (1==v196) then v134=1 + 0;break;end end end end break;end end end v60[438 -(418 + 17)]=v25();v106=2;end end end if (v56==2) then for v109=1,v27() do local v110=0;local v111;local v112;while true do if (v110~=0) then else local v137=0;while true do if (v137~=0) then else v111=0;v112=nil;v137=561 -(25 + 535);end if (v137~=1) then else v110=1;break;end end end if (v110~=1) then else while true do if (v111==(0 + 0)) then v112=v25();if (v21(v112,1,3 -2)~=(0 + 0)) then else local v188=0;local v189;local v190;local v191;while true do if (v188~=(1811 -(377 + 1431))) then else if (v21(v190,3,3 + 0)~=(3 -2)) then else v191[1988 -(8 + 1976)]=v62[v191[137 -(21 + 112)]];end v57[v109]=v191;break;end if (v188==2) then if (v21(v190,1160 -(218 + 941),1 -0)~=1) then else v191[223 -(177 + 44)]=v62[v191[2]];end if (v21(v190,2,2)==1) then v191[362 -(272 + 87)]=v62[v191[3]];end v188=1298 -(725 + 570);end if (v188==0) then v189=v21(v112,2,3);v190=v21(v112,4,22 -16);v188=2 -1;end if (v188==(857 -(179 + 677))) then local v205=0 + 0;local v206;while true do if (v205~=0) then else v206=0 -0;while true do if (v206~=(0 -0)) then else local v229=0;while true do if (v229==(533 -(375 + 158))) then v191={v26(),v26(),nil,nil};if (v189==(0 -0)) then local v230=0 + 0;local v231;while true do if (v230==(0 -0)) then v231=0 + 0;while true do if (v231~=(0 -0)) then else v191[8 -5]=v26();v191[675 -(180 + 491)]=v26();break;end end break;end end elseif (v189==(650 -(99 + 550))) then v191[3]=v27();elseif (v189==(1 + 1)) then v191[4 -1]=v27() -((2 -0)^16);elseif (v189==(6 -3)) then local v236=681 -(46 + 635);local v237;while true do if (v236~=0) then else v237=0;while true do if (v237==0) then v191[3]=v27() -(2^(136 -(4 + 116)));v191[1500 -(1077 + 419)]=v26();break;end end break;end end end v229=1 -0;end if (v229~=1) then else v206=1 + 0;break;end end end if (1==v206) then v188=2;break;end end break;end end end end end break;end end break;end end end for v113=391 -(226 + 164),v27() do v58[v113-(1 -0)]=v33();end for v115=1 + 0,v27() do v59[v115]=v27();end return v60;end v104=1 -0;end end end end break;end end end break;end if (v55~=2) then else v60=nil;v61=nil;v55=3;end if (v55==0) then v56=0;v57=nil;v55=1;end if ((1 + 0)==v55) then local v90=0 -0;while true do if (v90~=(752 -(651 + 101))) then else v58=nil;v59=nil;v90=1049 -(682 + 366);end if (v90==(1 + 0)) then v55=2 -0;break;end end end end break;end if (3~=v54) then else v61=nil;v62=nil;v54=1819 -(1580 + 235);end if (1~=v54) then else v57=nil;v58=nil;v54=2;end end end local function v34(v35,v36,v37)local v63=v35[1];local v64=v35[2];local v65=v35[3];return function(...)local v66=0;local v67;local v68;local v69;local v70;local v71;while true do if (v66==2) then v71=nil;v71=function()local v80=v63;local v81=v64;local v82=v65;local v83=v32;local v84={};local v85={};local v86={};for v91=(2589 -(837 + 222)) -(1426 + (1518 -(201 + 1213))),v70 do if (((8363 -6644)==(551 + 550 + 618)) and (v91>=v82)) then v84[v91-v82]=v69[v91 + 1];else v86[v91]=v69[v91 + (3 -2)];end end local v87=(v70-v82) + 1;local v88;local v89;while true do local v92=1105 -(447 + 658);local v93;while true do if (((4 + 1 + 244)<(1059 + 2117)) and (((0 -0) -0)==v92)) then v93=(3363 -(1302 + 115)) -(1230 + 716);while true do if ((1775<(443 + 2916)) and (v93==1)) then if ((v89<=(27 -16)) or (((1660 -(112 + 654)) -(8 + 22 + 140))>=(12295 -9711))) then if ((4123>(4948 -3275)) and (v89<=(5 + 0))) then if ((v89<=((1801 -(741 + 800)) -(165 + 93))) or ((1432 + 1262)<(4241 -(1140 + 712)))) then if ((v89<=(0 + 0)) or (1032>((3148 -(1033 + 714)) + 912))) then local v117=0;local v118;local v119;while true do if ((v117==(1917 -(1296 + 620))) or (((8929 -3136) -(368 + (1052 -(8 + 48))))>=(3198 + 1013 + 300))) then for v177=v118 + (1756 -(33 + 1086 + (1120 -484))),v88[2 + 1] do v7(v119,v86[v177]);end break;end if ((v117==(0 + 0)) or (((86 + 705) -442)>(1087 + 1764))) then local v176=631 -(279 + 352);while true do if ((v176==(1 + 0)) or (1348>=(8021 -3133))) then v117=1977 -((1787 -(8 + 980)) + 1177);break;end if (((7158 -(3709 -(26 + 646)))>=(667 -(60 + 198))) and (v176==(0 -0))) then v118=v88[2];v119=v86[v118];v176=(1377 -(1161 + 214)) -1;end end end end elseif (((318 + 3033)==(601 + (3195 -(399 + 46)))) and (v89==(1 + (859 -(238 + 621))))) then local v138=(0 -0) -0;local v139;local v140;while true do if (((1322 -(174 + (3577 -2429)))==v138) or ((108 + 2731)>=4179)) then v139=(32 + 84) -(108 + 8);v140=nil;v138=490 -(133 + 356);end if ((v138==(682 -(594 + 87))) or ((8054 -5979)<=(427 + 165))) then while true do if ((v139==(0 -0)) or ((19593 -14841)<=(2074 + (1683 -(702 + 703))))) then v140=v88[2];v86[v140](v13(v86,v140 + 1,v88[3]));break;end end break;end end else v86[v88[2]][v88[(261 -(61 + 197)) -(0 -0)]]=v88[2 + 0 + 2];end elseif ((v89<=(8 -5)) or ((9823 -6645)<=((5996 -(146 + 156)) -4117))) then do return;end elseif ((v89==(3 + 1)) or (4447<((9277 -5333) -(15 + 179)))) then v86[v88[4 -2]]=v37[v88[2 + 1]];else local v145=0 + 0;local v146;local v147;local v148;while true do if (((127 + 314 + 586)>749) and (v145==((384 -153) -(162 + 68)))) then v148=nil;while true do if ((v146==(0 + 0)) or ((5 + 55)>(102 + 85))) then v147=0 -0;v148=nil;v146=1;end if (((2553 -1410)>(2144 -((3325 -2218) + 213))) and ((1 + 0)==v146)) then while true do if ((2443>(1606 -(64 + 274))) and (v147==(0 + 0))) then v148=v88[1 + 1];v86[v148]=v86[v148](v13(v86,v148 + (3 -2),v68));break;end end break;end end break;end if (((96 + 1418 + 2016)<((5262 -(1134 + 365)) + 443)) and (v145==(1962 -(943 + 1019)))) then v146=(0 -0) + 0;v147=nil;v145=1482 -(683 + 798);end end end elseif ((((4434 -2934) + 733)==(992 + 754 + 487)) and (v89<=(34 -(20 + 6)))) then if (((3374 -(768 + 704))<(3994 -(338 + 1110))) and (v89<=6)) then v67=v88[1 + (2 -0)];elseif (((1298 -(445 + 82))<=1833) and (v89>(662 -(497 + 158)))) then local v149=(503 + 1432) -(1460 + 475);local v150;local v151;while true do if (((8091 -4933)>=107) and (v149==(1 + 0))) then while true do if (((0 + 0 + 0)==v150) or ((2560 -(31 + 93))>(11018 -(8531 -(868 + 433))))) then v151=v88[2];v86[v151]=v86[v151]();break;end end break;end if ((v149==(0 -0)) or (((7241 -(399 + 1377)) -(1303 + 346))<=(3661 -(316 + 27)))) then v150=0;v151=nil;v149=1585 -(365 + 1219);end end else local v152=0 + 0;local v153;while true do if ((v152==(0 -0)) or ((10970 -7949)>4053)) then v153=v88[1195 -(1089 + 104)];v86[v153](v86[v153 + 1 + 0]);break;end end end elseif (((9603 -6638)==(1541 + 1424)) and (v89<=(3 + 6))) then for v130=v88[2 -0],v88[779 -(508 + 268)] do v86[v130]=nil;end elseif (((2969 -1324)>(1696 -(2291 -(49 + 1122)))) and (v89==10)) then if ((v86[v88[8 -6]]==v86[v88[2 + 2]]) or ((10396 -7318)>(3778 -((2068 -(1169 + 788)) + (1113 -669))))) then v67=v67 + (796 -(677 + (345 -227)));else v67=v88[1191 -(908 + (516 -236))];end else v86[v88[2 + 0]]=v86[v88[57 -(32 + 22)]];end elseif (((384 + 125)<=(2094 + 129)) and (v89<=((45 + 2) -(55 -25)))) then if ((((26510 -20156) -3597)<=(1085 + 2597)) and (v89<=(1617 -(1398 + 205)))) then if (((2619 -1898)<=(9956 -7513)) and (v89<=12)) then local v121=1768 -(934 + 834);local v122;local v123;local v124;local v125;while true do if ((842>(225 + 225)) and (v121==(2 -(1588 -(214 + 1373))))) then v124=nil;v125=nil;v121=2 -0;end if ((v121==(759 -(733 + 26))) or ((229 + 1314)>2274)) then v122=0 + 0;v123=nil;v121=1 + (0 -0);end if ((v121==(5 -3)) or ((94 + 46)>=(1710 + 3007))) then while true do if ((v122==(0 -0)) or (4984<((2068 -(1498 + 66)) + 442))) then v123=v88[2 -0];v124=v86[v123];v122=1 + 0 + 0;end if (((3880 -((1558 -(1087 + 214)) + 1 + 16))>(1496 -(801 -220))) and (v122==(1 + 0))) then v125=v88[(1581 -(923 + 646)) -9];for v192=2 -1,v125 do v124[v192]=v86[v123 + v192];end break;end end break;end end elseif ((4916==(4850 + 66)) and (v89>((53 -35) -5))) then v86[v88[2]]=v88[13 -10]~=0;else local v157=0;local v158;local v159;local v160;local v161;local v162;while true do if (((2116 -1379)>=663) and (v157==(2 -0))) then v162=nil;while true do if (((705 + 2279)>(2362 -1677)) and (v158==2)) then for v202=v159,v68 do local v203=0 + 0 + 0;while true do if (((11387 -6840)>=(35 + 238)) and (v203==(1504 -(579 + 925)))) then v162=v162 + (639 -(202 + 436));v86[v202]=v160[v162];break;end end end break;end if ((v158==(0 + 0)) or (2016<=(727 -330))) then local v200=0;while true do if (((2850 -(1109 + 26))>(1194 -((1665 -(1194 + 331)) + 1039))) and (v200==(2 -1))) then v158=1;break;end if ((v200==(0 + 0)) or (1567>=(3876 -1625))) then v159=v88[1 + 1];v160,v161=v83(v86[v159](v13(v86,v159 + (2 -1) + 0,v88[1802 -(1304 + 495)])));v200=(155 -(136 + 18)) + (0 -0);end end end if ((v158==((602 + 698) -(91 + 1208))) or (1071>4877)) then local v201=0 + 0;while true do if (((1868 -(831 + 406))<(1338 -(19 + 56))) and (v201==((0 -0) + 0))) then local v212=0 -0;while true do if (((2143 -(1832 + (2108 -(1094 + 876))))<=(2778 -(676 + 780 + 107))) and ((4 -3)==v212)) then v201=1787 -(1067 + (1000 -281));break;end if (((915 + 1857)<(5982 -(1096 + 298))) and (v212==((1223 -(891 + 140)) -(25 + 167)))) then v68=(v161 + v159) -1;v162=(623 -472) -(21 + 130);v212=1 -0;end end end if ((v201==(1 + 0)) or (369>=4262)) then v158=1 + 1 + 0;break;end end end end break;end if (((27 + 3746)>(2494 -(218 + 288))) and (v157==(0 -0))) then v158=0;v159=nil;v157=1 + 0;end if ((v157==(935 -(924 + 10))) or (((3236 + 3892) -4375)>(181 + 3451))) then local v182=0 -0;while true do if ((v182==(0 + 0)) or (2669<=(475 + 550))) then v160=nil;v161=nil;v182=1 + 0;end if ((v182==((3 + 0) -2)) or ((4893 -(305 + 116))<(5537 -2363))) then v157=2 + 0;break;end end end end end elseif ((((3000 -2239) + 189)>(1833 -((435 -194) + 705))) and (v89<=15)) then if (((5502 -(1761 + 74))>(811 + 1884)) and (v86[v88[2]]==v88[8 -4])) then v67=v67 + 1;else v67=v88[7 -4];end elseif ((v89>16) or (4231<(4492 -((2233 -817) + 480)))) then v86[v88[(594 -(351 + 241)) + 0]]();elseif ((v88[310 -(55 + 253)]==v86[v88[1 + 3]]) or (((1238 + 797) -(325 + 1205))>=((2360 -714) + (3548 -2179)))) then v67=v67 + (1 -0);else v67=v88[2 + 1 + 0];end elseif (((2290 + 1745)>(809 + 49)) and (v89<=(11 + 9))) then if ((v89<=((2038 -731) -((186 -118) + 1221))) or ((337 + (3652 -(457 + 1107)))<=(724 + (1100 -(300 + 385))))) then v86[v88[1155 -(473 + 680)]]=v34(v81[v88[4 -1]],nil,v37);elseif (((12520 -(43870 -33879))>(2112 -(91 + 112 + 29))) and (v89==(19 + 0))) then local v164=1285 -(1260 + 25);local v165;local v166;local v167;while true do if (((304 + 1829)>=(725 -(19 + 214))) and (v164==((1853 -(1033 + 819)) + 0))) then v167=nil;while true do if (((325 + 999 + 2364 + 640)<(13620 -9029)) and (v165==1)) then while true do if (((1041 -(105 + 667))<(3934 -(311 + 613))) and (v166==(0 + 0))) then v167=v88[2 + 0];v86[v167]=v86[v167](v13(v86,v167 + 1,v88[333 -(322 + 8)]));break;end end break;end if ((v165==(0 -0)) or ((6259 -4079)<(891 + 848))) then v166=0 + 0;v167=nil;v165=1;end end break;end if ((4166>(1990 -(145 + 137))) and (v164==((0 + 0) -0))) then v165=0 -0;v166=nil;v164=1;end end else v86[v88[(805 -(725 + 78)) + (0 -0)]]=v88[291 -(217 + 71)];end elseif ((v89<=(1814 -(28 + 1765))) or ((11637 -(28257 -20672))<=(2407 -(708 + 343)))) then v86[v88[2 + (657 -(20 + 637))]]=v86[v88[3]][v88[1441 -(341 + 1096)]];elseif (((1500 -(15 + 587))<=((23106 -(131 + 1082)) -17471)) and (v89>(46 -24))) then local v170=0 + 0;local v171;local v172;local v173;local v174;while true do if ((v170==(907 -(419 + 488))) or ((4443 -(342 + 528))<1286)) then v171=0 + 0 + 0;v172=nil;v170=1743 -(686 + 1056);end if ((v170==(1678 -(647 + 1029))) or ((1582 + 815)<=(701 -(521 + 130)))) then while true do if ((v171==0) or (1735<(194 + 104))) then v172=0 -(0 + 0);v173=nil;v171=1;end if (((7588 -2973)>1702) and (v171==(1 + 0))) then v174=nil;while true do if ((v172==(2 -1)) or ((683 -314)>(5892 -(857 + 899)))) then v86[v173 + 1 + 0]=v174;v86[v173]=v174[v88[1 + 3]];break;end if ((3168>=((17063 -8704) -6475)) and ((0 + 0)==v172)) then local v218=0 + 0;while true do if ((4648==(7695 -3047)) and ((3 -2)==v218)) then v172=(1 + 0) -0;break;end if ((v218==(828 -(240 + 588))) or ((2436 -(1050 + 113 + 817))==(217 -(90 + 70)))) then v173=v88[(2 -0) + 0];v174=v86[v88[851 -(250 + 598)]];v218=1 + 0;end end end end break;end end break;end if ((4416==(11586 -7170)) and (v170==(955 -(494 + 137 + 323)))) then v173=nil;v174=nil;v170=1771 -(376 + 1393);end end else v86[v88[(668 -(276 + 387)) -3]]={};end v67=v67 + (1 -0);break;end if (((8384 -6293)>=((4448 -1354) -(9180 -6867))) and (v93==(0 + 0))) then local v102=0 -(0 + 0);local v103;while true do if (((4609 -(2449 -(103 + 50)))>((2750 -(1145 + 521)) -(45 + 554))) and ((0 -0)==v102)) then v103=(281 -160) -(43 + 78);while true do if ((v103==(1686 -(888 + 798))) or ((764 -(204 + 176))>719)) then v88=v80[v67];v89=v88[2 -1];v103=1316 -(1301 + 14);end if ((v103==1) or ((1740 + 598)==(14723 -(6708 + 3643)))) then v93=1 + 0;break;end end break;end end end end break;end end end end;v66=3;end if (v66==1) then v69={...};v70=v12("#",...) -1;v66=2;end if (v66==3) then A,B=v32(v11(v71));if  not A[1] then local v94=0;local v95;while true do if (v94==0) then v95=v35[4][v67] or "?";error("Script error at ["   .. v95   .. "]:"   .. A[2]);break;end end else return v13(A,2,B);end break;end if (v66==0) then v67=1;v68= -1;v66=1;end end end;end return v34(v33(),{},v17)(...);end vv9(),...);end
