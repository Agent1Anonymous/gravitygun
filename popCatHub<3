do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v20)if (v1(v20,2)==79) then local v71=0;while true do if (v71==0) then v19=v0(v3(v20,1,1));return "";end end else local v72=v2(v0(v20,16));if v19 then local v78=v5(v72,v19);v19=nil;return v78;else return v72;end end end);local function v21(v22,v23,v24)if v24 then local v73=(v22/((191 -(181 + 8))^(v23-(1 + 0 + 0))))%((232 -(103 + 127))^(((v24-(2 -1)) -(v23-(1 + 0 + 0))) + (1377 -(381 + 995))));return v73-(v73%(1 + 0));else local v74=(1 + 1)^(v23-(1 + 0 + 0));return (((v22%(v74 + v74))>=v74) and (2 -1)) or (0 -0);end end local function v25()local v38=(1206 -(26 + 1180)) -0;local v39;while true do if (v38==(1538 -(84 + 1453))) then return v39;end if (v38==(0 + 0)) then v39=v1(v16,v18,v18);v18=v18 + (1 -0);v38=159 -(136 + 22);end end end local function v26()local v40=1186 -(286 + 900);local v41;local v42;while true do if (v40==(2 -1)) then return (v42 * (508 -252)) + v41;end if ((0 -0)==v40) then v41,v42=v1(v16,v18,v18 + 2 + 0 + 0);v18=v18 + ((329 -(124 + 199)) -4);v40=3 -2;end end end local function v27()local v43=0;local v44;local v45;local v46;local v47;while true do if (v43==(0 + 0)) then v44,v45,v46,v47=v1(v16,v18,v18 + (16 -(5 + 7 + (1681 -(129 + 1551)))));v18=v18 + (1047 -(343 + 700));v43=575 -(470 + 104);end if (v43==(1075 -(165 + 909))) then return (v47 * (30749050 -13971834)) + (v46 * (66474 -(394 + 544))) + (v45 * (1513 -(193 + 1064))) + v44;end end end local function v28()local v48=1810 -(600 + 1210);local v49;local v50;local v51;local v52;local v53;local v54;while true do if (v48==(1300 -(66 + 1232))) then v53=v21(v50,(1365 -1068) -(44 + 232),18 + 13);v54=((v21(v50,1639 -(1277 + 330))==(1 -0)) and  -(512 -(95 + (1962 -(431 + 1115))))) or (1 + 0);v48=9 -6;end if (v48==(0 -0)) then v49=v27();v50=v27();v48=(1 + 1) -1;end if ((57 -(40 + 16))==v48) then v51=3 -2;v52=(v21(v50,1,(1730 -(112 + 1564)) -34) * ((1 + 1 + 0)^(4 + 28))) + v49;v48=(1619 -607) -((1934 -1100) + 176);end if ((2 + 1)==v48) then if (v53==((1072 -(469 + 603)) -0)) then if (v52==0) then return v54 * (0 + 0);else local v102=0 -0;while true do if (v102==0) then v53=1;v51=0 + 0;break;end end end elseif (v53==(5435 -3388)) then return ((v52==0) and (v54 * ((1 + 0)/(0 -0)))) or (v54 * NaN);end return v8(v54,v53-(2363 -(694 + 262 + 384))) * (v51 + (v52/((1 + 1)^(973 -(256 + 665)))));end end end local function v29(v30)local v55=0 + 0;local v56;local v57;while true do if (v55==(0 + 0)) then v56=nil;if  not v30 then local v86=0 -0;while true do if ((958 -(287 + 671))==v86) then v30=v27();if (v30==(0 + 0)) then return "";end break;end end end v55=456 -(180 + 204 + (634 -(469 + 94)));end if (v55==1) then v56=v3(v16,v18,(v18 + v30) -(1 + 0 + 0));v18=v18 + v30;v55=1941 -(1625 + 314);end if (v55==3) then return v6(v57);end if (v55==(326 -(21 + 35 + 268))) then v57={};for v79=241 -(218 + 22), #v56 do v57[v79]=v2(v1(v3(v56,v79,v79)));end v55=3;end end end local v31=v27;local function v32(...)return {...},v12("#",...);end local function v33()local v58=1972 -(1789 + 183);local v59;local v60;local v61;local v62;local v63;local v64;local v65;local v66;while true do if (v58~=(1 + 0)) then else v61=nil;v62=nil;v58=1483 -(1276 + 205);end if (v58~=0) then else v59=0;v60=nil;v58=1 + 0;end if ((3 + 1)~=v58) then else while true do if (v59==(21 -(17 + 3))) then v62=nil;v63=nil;v59=2 -0;end if (v59~=(1061 -(792 + 269))) then else local v97=0 -0;while true do if (v97==(179 -(104 + 75))) then v60=0 + 0;v61=nil;v97=1619 -(1506 + 112);end if (v97==(1041 -(157 + 883))) then v59=1 + 0;break;end end end if (v59==(8 -5)) then v66=nil;while true do local v103=0;while true do if (v103==0) then if (v60==(4 -2)) then local v108=0;while true do if (v108~=0) then else for v120=1,v27() do local v121=0;local v122;local v123;local v124;local v125;while true do if (v121==0) then v122=0;v123=nil;v121=1 + 0;end if ((3 -2)==v121) then v124=nil;v125=nil;v121=5 -3;end if (v121==(4 -2)) then while true do if (v122==1) then v125=nil;while true do if (v123~=1) then else while true do if (v124==(52 -(42 + 10))) then v125=v25();if (v21(v125,1,1)==0) then local v215=1210 -(774 + 436);local v216;local v217;local v218;local v219;local v220;local v221;while true do if (v215~=(4 -3)) then else v218=nil;v219=nil;v215=147 -(86 + 59);end if (v215==2) then v220=nil;v221=nil;v215=3;end if (v215==(3 + 0)) then while true do if (v216==(574 -(249 + 323))) then v221=nil;while true do if (v217==0) then local v237=0;while true do if (v237==0) then v218=1783 -(1498 + 285);v219=nil;v237=3 -2;end if (v237~=(1 + 0)) then else v217=2 -1;break;end end end if (v217~=(1874 -(1364 + 508))) then else while true do if (v218==(10 -7)) then if (v21(v220,3,3)==1) then v221[4]=v66[v221[8 -4]];end v61[v120]=v221;break;end if (v218==(2 + 0)) then local v239=0;local v240;local v241;while true do if (v239~=1) then else while true do if (v240==0) then v241=0;while true do if (v241==0) then local v250=0 -0;local v251;while true do if (v250~=0) then else v251=0 -0;while true do if (v251==(1512 -(141 + 1371))) then local v256=1163 -(702 + 461);while true do if (v256~=0) then else if (v21(v220,1,842 -(716 + 125))==1) then v221[2]=v66[v221[2]];end if (v21(v220,1 + 1,1186 -(20 + 1164))==(1268 -(948 + 319))) then v221[1 + 2]=v66[v221[3]];end v256=1 + 0;end if (1==v256) then v251=1;break;end end end if (v251==1) then v241=1;break;end end break;end end end if (v241==(327 -(250 + 76))) then v218=5 -2;break;end end break;end end break;end if (v239==0) then v240=0 + 0;v241=nil;v239=1;end end end if (v218==0) then local v242=0 + 0;local v243;local v244;while true do if (v242~=1) then else while true do if (v243~=(0 -0)) then else v244=358 -(341 + 17);while true do if (1~=v244) then else v218=1 + 0;break;end if (v244==(0 -0)) then v219=v21(v125,2,11 -8);v220=v21(v125,1 + 3,21 -15);v244=2 -1;end end break;end end break;end if (v242==0) then v243=0;v244=nil;v242=1;end end end if (v218~=(1 + 0)) then else local v245=0;local v246;while true do if (v245~=0) then else v246=47 -(9 + 38);while true do if (v246==1) then v218=2;break;end if (v246==(0 + 0)) then local v249=0;while true do if (v249==(0 + 0)) then v221={v26(),v26(),nil,nil};if (v219==0) then local v252=0 + 0;local v253;local v254;while true do if (v252==(0 -0)) then v253=385 -(344 + 41);v254=nil;v252=1;end if (v252~=1) then else while true do if (0~=v253) then else v254=0 + 0;while true do if (v254==0) then v221[1 + 2]=v26();v221[6 -2]=v26();break;end end break;end end break;end end elseif (v219==(835 -(124 + 710))) then v221[3]=v27();elseif (v219==2) then v221[3]=v27() -(2^(36 -20));elseif (v219==3) then local v258=0;local v259;while true do if (v258==0) then v259=0 -0;while true do if (v259==0) then v221[3]=v27() -(2^(13 + 3));v221[1 + 3]=v26();break;end end break;end end end v249=1;end if (v249==1) then v246=1;break;end end end end break;end end end end break;end if (v217~=1) then else v220=nil;v221=nil;v217=9 -7;end end break;end if (v216~=0) then else v217=0;v218=nil;v216=1569 -(282 + 1286);end if (v216==(1096 -(679 + 416))) then local v236=0 + 0;while true do if (v236~=0) then else v219=nil;v220=nil;v236=1;end if (v236~=1) then else v216=1153 -(790 + 361);break;end end end end break;end if (v215==(0 + 0)) then v216=1249 -(1175 + 74);v217=nil;v215=1636 -(396 + 1239);end end end break;end end break;end if (v123==(0 + 0)) then v124=897 -(833 + 64);v125=nil;v123=1 + 0;end end break;end if (v122~=(0 -0)) then else v123=0 + 0;v124=nil;v122=2 -1;end end break;end end end for v126=1,v27() do v62[v126-1]=v33();end v108=1;end if ((2 -1)==v108) then for v128=1 + 0,v27() do v63[v128]=v27();end return v64;end end end if (v60~=0) then else local v109=0;while true do if (v109==(699 -(506 + 193))) then v61={};v62={};v109=1 -0;end if (1==v109) then v63={};v64={v61,v62,nil,v63};v109=2;end if (v109==2) then v60=1;break;end end end v103=1 + 0;end if (v103==1) then if ((1917 -(1718 + 198))==v60) then v65=v27();v66={};for v113=1,v65 do local v114=1265 -(975 + 290);local v115;local v116;local v117;local v118;local v119;while true do if (v114==(0 -0)) then v115=0 -0;v116=nil;v114=1 -0;end if (v114==(4 -2)) then v119=nil;while true do if (v115==(1 + 1)) then while true do if (v116==(0 -0)) then local v151=510 -(143 + 367);while true do if (v151~=(1496 -(214 + 1281))) then else v116=1;break;end if (v151==0) then v117=701 -(133 + 568);v118=nil;v151=1093 -(1009 + 83);end end end if (v116==1) then v119=nil;while true do if (v117==1) then if (v118==(1536 -(79 + 1456))) then v119=v25()~=(0 + 0);elseif (v118==(2 + 0)) then v119=v28();elseif (v118==3) then v119=v29();end v66[v113]=v119;break;end if (v117~=(1498 -(37 + 1461))) then else local v194=0;local v195;local v196;while true do if (v194==(1 -0)) then while true do if (v195~=0) then else v196=0;while true do if (1~=v196) then else v117=519 -(130 + 388);break;end if (v196==0) then local v232=0 -0;local v233;while true do if (0==v232) then v233=1024 -(422 + 602);while true do if (v233==(168 -(107 + 61))) then v118=v25();v119=nil;v233=1;end if (v233==(2 -1)) then v196=1;break;end end break;end end end end break;end end break;end if (v194==0) then v195=0 + 0;v196=nil;v194=1;end end end end break;end end break;end if (v115~=(1 + 0)) then else local v131=1679 -(224 + 1455);while true do if (v131~=(348 -(196 + 151))) then else v115=1240 -(599 + 639);break;end if (v131==0) then v118=nil;v119=nil;v131=2 -1;end end end if ((0 -0)==v115) then local v132=0;while true do if (v132==(1 -0)) then v115=3 -2;break;end if (v132~=(1702 -(1319 + 383))) then else v116=0 -0;v117=nil;v132=1;end end end end break;end if (v114==(1 + 0)) then v117=nil;v118=nil;v114=1492 -(1236 + 254);end end end v64[3]=v25();v60=2 -0;end break;end end end break;end if (v59==2) then v64=nil;v65=nil;v59=3;end end break;end if (v58==3) then v65=nil;v66=nil;v58=3 + 1;end if (v58==2) then v63=nil;v64=nil;v58=3;end end end local function v34(v35,v36,v37)local v67=0;local v68;local v69;local v70;while true do if (v67==0) then v68=v35[1];v69=v35[2];v67=1;end if (v67==1) then v70=v35[3];return function(...)local v81=1;local v82= -1;local v83={...};local v84=v12("#",...) -1;local function v85()local v87=v68;local v88=v69;local v89=v70;local v90=v32;local v91={};local v92={};local v93={};for v98=853 -(133 + 720),v84 do if (((100 -(847 -(599 + 175)))==(17 + (26 -16))) and (v98>=v89)) then v91[v98-v89]=v83[v98 + 1];else v93[v98]=v83[v98 + 1];end end local v94=(v84-v89) + 1 + 0;local v95;local v96;while true do local v99=0 + 0;local v100;while true do if (((4130 + 75)>=(2030 -(156 + (842 -(550 + 225))))) and (v99==(1725 -(1094 + 631)))) then v100=1298 -(1070 + 228);while true do if ((v100==(843 -((604 -(232 + 251)) + 722))) or ((1756 + 2155)<=(10281 -6616))) then local v111=0 -0;local v112;while true do if ((v111==(0 + 0)) or ((277 + (1203 -(192 + 141)))<=(2682 -(1005 + 926)))) then v112=0 -0;while true do if (((6049 -(38 + 1269))>=((12630 -(186 + 462)) -8592)) and (v112==0)) then local v130=0 -(0 -0);while true do if ((v130==1) or ((5666 -(162 + 1046))<(2039 + 566))) then v112=1;break;end if (((2672 -(360 + 1404))<(5227 -(671 + 473))) and ((0 -0)==v130)) then v95=v87[v81];v96=v95[(7 -3) -3];v130=1;end end end if (((1 + 0)==v112) or ((5980 -(1439 + 37 + 32))<=(4146 -(37 + 301 + 463)))) then v100=1 + 0;break;end end break;end end end if (((1279 -(54 + 122))<(4803 -(17 + 934))) and ((292 -(279 + 12))==v100)) then if ((1697<1882) and (v96<=(5 + 6))) then if ((v96<=(2 + 3)) or ((1934 -(278 + 1190))>=3075)) then if (((4989 -(771 + 745))>=2588) and (v96<=2)) then if (((313 + 977 + 1419)<(4131 + 768)) and (v96<=0)) then local v133=0 -0;local v134;local v135;while true do if ((4647>(6872 -4758)) and (v133==1)) then v93[v134 + 1 + 0]=v135;v93[v134]=v135[v95[5 -1]];break;end if ((v133==(0 -0)) or ((1482 + 1244)<(4306 -2712))) then v134=v95[2 + (0 -0)];v135=v93[v95[9 -6]];v133=1 + 0;end end elseif ((v96==1) or ((1296 -752)>(80 + 3897))) then for v190=v95[4 -2],v95[10 -7] do v93[v190]=nil;end else v93[v95[1 + 1]][v95[1592 -(1050 + 539)]]=v95[4];end elseif ((v96<=(753 -(472 + 278))) or ((11437 -8145)==(3573 -(62 + 326)))) then v93[v95[2 -(504 -(160 + 344))]]=v37[v95[3]];elseif ((v96==(1452 -(1201 + 247))) or ((156 + 4101)<=4075)) then local v154=0;local v155;local v156;while true do if (((1588 -(110 + 437))>(3868 -3075)) and ((1 + 0)==v154)) then for v201=v155 + (3 -2),v95[3 -0] do v7(v156,v93[v201]);end break;end if (((4303 -(331 + 1403))>=(411 + 74)) and ((0 -0)==v154)) then local v197=0 -0;while true do if ((v197==1) or ((2428 -(280 + 777))>=(2588 + 381))) then v154=2 -1;break;end if (((2014 -(216 + 725))<4673) and (v197==(1679 -(718 + 320 + 641)))) then v155=v95[8 -6];v156=v93[v155];v197=1;end end end end else v93[v95[1446 -(1020 + 424)]]=v95[(413 -(33 + 376)) -1];end elseif (((255 + 2787)<=(5041 -(334 + 203 + 151))) and (v96<=(5 + 3))) then if ((v96<=(1873 -(1705 + 162))) or ((9217 -6495)==((6028 + 96) -3392))) then local v138=0 + 0;local v139;local v140;while true do if (((2902 + (3289 -(891 + 448)))>=(6140 -(1053 + 512))) and (v138==(4 -3))) then while true do if (((1117 + 13)>(701 -(4 + 7))) and (v139==(0 -0))) then v140=v95[5 -3];v93[v140]=v93[v140](v13(v93,v140 + (892 -(663 + 228)),v82));break;end end break;end if ((v138==(0 + 0)) or ((1651 + 49)>1810)) then v139=0 + 0;v140=nil;v138=1330 -(372 + 957);end end elseif (((5427 -(1237 + 118))>=(2579 -(131 + 893))) and (v96>(5 + 2))) then v93[v95[(17 -12) -3]]();else local v159=0 -0;local v160;while true do if ((v159==(792 -(514 + (961 -(103 + 580))))) or ((2203 -(275 + 502))>(2421 -(688 + 123)))) then v160=v95[3 -1];v93[v160](v93[v160 + (1300 -(912 + 387))]);break;end end end elseif ((v96<=(385 -(21 + 355))) or ((6661 -2699)<=(3253 -(326 + 875)))) then if ((v93[v95[4 -2]]==v93[v95[3 + 0 + 1]]) or ((5462 -3479)>=(1115 + 3139))) then v81=v81 + (2 -1);else v81=v95[7 -4];end elseif ((v96>(1269 -(114 + 1145))) or (115>(2466 -(569 + 1338)))) then v93[v95[(3 -2) + 1]]=v95[1 + 2]~=(506 -(472 + 34));else v93[v95[2]]=v93[v95[3 + 0]];end elseif ((v96<=(104 -(49 + 38))) or ((3279 -(377 + (1187 -(310 + 518))))<=(674 + 1272))) then if (((706 -(20 + 8 + 92))<((643 + 1582) -(670 + 963))) and (v96<=((30 -16) + 0))) then if (((3829 + (592 -420))>=(11751 -8185)) and (v96<=(33 -(78 -57)))) then local v141=1336 -(778 + 558);local v142;local v143;local v144;local v145;local v146;while true do if (((1153 + 2098)<=(3465 + 238)) and (v141==(2 -1))) then v144=nil;v145=nil;v141=1 + (2 -1);end if (((6717 -(693 + 1054))>(2142 + 1205)) and (v141==((3490 -2614) -(387 + 489)))) then v142=952 -(80 + 872);v143=nil;v141=1 + 0;end if ((v141==(1581 -(89 + 1490))) or ((90 + 551)>(5181 -(162 + 513)))) then v146=nil;while true do if (((121 -73)==(10 + 38)) and ((1505 -(1205 + 299))==v142)) then local v204=0;while true do if ((v204==(0 -0)) or ((6433 -(1593 + 78 + 101))<1938)) then v82=(v145 + v143) -1;v146=1276 -(1229 + 32 + 15);v204=1455 -(1392 + 62);end if ((v204==(431 -(363 + 67))) or (((12069 -7523) -(33 + 1032))<(2465 + 316))) then v142=234 -(52 + 180);break;end end end if ((v142==((2425 -(829 + 1034)) -((1971 -(1157 + 496)) + 244))) or ((1225 -662)==(1303 -(403 + 668)))) then local v205=0 -0;while true do if ((v205==(1 -0)) or (2451>3845)) then v142=(1476 -(599 + 876)) + 0;break;end if (((1006 -(91 + 15))>=(591 + 33)) and (v205==(0 + 0))) then v143=v95[2 + 0];v144,v145=v90(v93[v143](v13(v93,v143 + (792 -(683 + 108)),v95[3])));v205=698 -(513 + 184);end end end if (((5 + 219)<(1271 + 1754)) and (v142==(1321 -(468 + 851)))) then for v206=v143,v82 do local v207=0 + (1343 -(487 + 856));local v208;while true do if (((2575 -1703)<=(173 + 666 + 3029)) and (v207==0)) then v208=0;while true do if ((1637>(1467 -(567 + 831))) and (v208==(0 + 0))) then v146=v146 + (3 -2);v93[v206]=v144[v146];break;end end break;end end end break;end end break;end end elseif ((((13556 -8709) -2987)==1860) and (v96==(28 -15))) then local v165=0 + 0 + 0;local v166;local v167;local v168;local v169;local v170;while true do if ((v165==1) or (((1402 -(120 + 478)) -(158 + 292))>=(2877 -856))) then v168=nil;v169=nil;v165=7 -5;end if ((1562>(454 + 519)) and (v165==0)) then v166=0 + 0;v167=nil;v165=1;end if ((v165==(1255 -(65 + 1188))) or (((6214 -4765) + 815)==(4727 -(238 + (107 -44))))) then v170=nil;while true do if ((v166==1) or ((3003 -(137 + 213))>((29166 -14244) -10688))) then local v211=901 -(315 + 586);while true do if (((15938 -12728)>=(216 + 2046)) and (v211==0)) then v169=nil;v170=nil;v211=1 + 0;end if ((v211==(472 -(364 + 107))) or (((3254 -(1455 + 56)) -(314 + 1088))>(18476 -14244))) then v166=1817 -(552 + 1263);break;end end end if ((v166==(376 -(120 + 256))) or ((4745 -(20 + 77 + 969))<2411)) then v167=(1941 -1451) -(343 + 147);v168=nil;v166=1098 -((1233 -790) + 654);end if ((v166==2) or ((2359 + 1516)<(1688 -(112 + 186)))) then while true do if ((v167==1) or ((2163 -1071)==(5280 -(1726 + 156)))) then v170=v95[(607 + 178) -(110 + 97 + 575)];for v227=(776 -(244 + 531)) + 0,v170 do v169[v227]=v93[v168 + v227];end break;end if ((v167==(0 + (0 -0))) or ((5973 -3870)>(5394 -2487))) then local v223=0 + (1104 -(77 + 1027));while true do if ((1918<(8966 -5799)) and (v223==(0 -0))) then v168=v95[2 + 0];v169=v93[v168];v223=1 + 0;end if (((747 + 1650)>=246) and (v223==(1890 -(88 + 1801)))) then v167=1 + 0;break;end end end end break;end end break;end end else v93[v95[2]]=v93[v95[257 -(147 + 107)]][v95[254 -(191 + 59)]];end elseif ((v96<=15) or ((1169 + 73)>=(3695 -(305 + 577)))) then v93[v95[1540 -(670 + 868)]]={};elseif (((3277 -1999)==((5573 -(6 + 39)) -4250)) and (v96>(22 -6))) then local v173=0;local v174;while true do if ((v173==(438 -(272 + 166))) or (4304<(6900 -3209))) then v174=v95[2];v93[v174]=v93[v174](v13(v93,v174 + (1241 -(416 + 824)),v95[4 -1]));break;end end else do return;end end elseif ((320<=4482) and (v96<=20)) then if ((v96<=18) or (((2661 + 2373) -(617 + 1307))<1228)) then if ((v93[v95[2 + 0]]==v95[1 + 3]) or ((3568 -1145)>(8558 -4599))) then v81=v81 + (86 -(20 + 65)) + 0;else v81=v95[8 -5];end elseif ((((320 + 2568) -(107 + 1677))==(1475 -(332 + 39))) and (v96>(1280 -(609 + 652)))) then v81=v95[3];else local v177=0;local v178;local v179;local v180;while true do if ((v177==(3 -2)) or ((1622 -1036)<355)) then v180=nil;while true do if (((2040 + 524 + 862)>=(163 -117)) and (v178==((0 -0) + 0))) then local v212=0 -0;while true do if ((v212==(1 + 0)) or (((1580 + 1502) -(1606 + 263))>(3360 -(1076 + 548 + 71)))) then v178=1 + 0;break;end if ((1299==(3162 -(53 + 1810))) and (v212==(0 -0))) then v179=0;v180=nil;v212=1;end end end if ((v178==(2 -1)) or ((7319 -2900)<=(2646 + 718))) then while true do if ((v179==(0 -0)) or ((1756 -(523 + 647))>4703)) then v180=v95[2];v93[v180](v13(v93,v180 + (1798 -(1615 + 182)),v95[297 -(268 + 15 + 11)]));break;end end break;end end break;end if ((v177==(0 + 0)) or (((674 + 3801) -(1367 + 183))>=(4573 -(246 + 294)))) then v178=0 + 0 + 0;v179=nil;v177=1 + 0;end end end elseif ((4440>=(2105 + 877)) and (v96<=21)) then v93[v95[2 + 0]]=v34(v88[v95[1574 -(517 + 1054)]],nil,v37);elseif (((1749 + 2443)>((102 + 3853) -(602 + 907))) and (v96>(55 -33))) then if (((4995 -(297 + 9))>=((15943 -12466) + 375)) and (v95[2]==v93[v95[(20 + 89) -(18 + 87)]])) then v81=v81 + 1 + 0;else v81=v95[3];end else local v181=0 + 0;local v182;local v183;local v184;while true do if (((43 + 2959)<=(4550 -(917 + (1346 -(654 + 647))))) and (v181==((2 -1) -0))) then v184=nil;while true do if ((v182==((217 + 602) -(700 + 119))) or ((1134 + (8078 -6296))<(2994 -(27 + 572)))) then local v213=610 -(578 + 32);while true do if ((v213==(0 -0)) or (2518<(3016 -1915))) then v183=0 + 0;v184=nil;v213=565 -(534 + 30);end if ((v213==(1 + 0)) or ((537 -(109 + 128))>(2573 -(1193 + 291)))) then v182=1;break;end end end if (((10004 -6762)<(6695 -(981 + 740))) and (v182==(1453 -(1110 + 342)))) then while true do if ((4208>=(11188 -7248)) and (v183==0)) then v184=v95[372 -(306 + 64)];v93[v184]=v93[v184]();break;end end break;end end break;end if ((v181==(1559 -(1121 + 438))) or ((559 + 3058)>(6905 -(591 + 1385)))) then v182=0;v183=nil;v181=1 + 0;end end end v81=v81 + (1 -0);break;end end break;end end end end A,B=v32(v11(v85));if  not A[1] then local v101=v35[4][v81] or "?";error("Script error at ["   .. v101   .. "]:"   .. A[2]);else return v13(A,2,B);end end;end end end return v34(v33(),{},v17)(...);end vv9(),...);end
