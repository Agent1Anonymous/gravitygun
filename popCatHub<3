do local v0=0;local v1;local v2;local v3;local v4;local v5;local v6;local v7;local v8;local v9;local v10;local v11;local v12;local v13;local v14;local v15;local v16;while true do if (v0==1) then v4=string.sub;v5=string.gsub;v6=string.rep;v0=2;end if (4==v0) then v13=select;v14=unpack or table.unpack;v15=tonumber;v0=5;end if (5==v0) then v16=nil;v16=function(v20,v21,...)local v27=1;local v28;v20=v5(v4(v20,5),"..",function(v29)if (v2(v29,2)==79) then local v82=0;while true do if (0==v82) then v28=v1(v4(v29,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v3(v1(v29,16));if v28 then local v108=0;local v109;while true do if (v108==1) then return v109;end if (v108==0) then v109=v6(v84,v28);v28=nil;v108=1;end end else return v84;end break;end end end end);local function v30(v31,v32,v33)if v33 then local v85=0 + 0;local v86;while true do if (v85==0) then v86=(v31/((2 + 0)^(v32-1)))%(2^(((v33-(1318 -(787 + 530))) -(v32-(1560 -(296 + 1263)))) + (4 -3)));return v86-(v86%((1223 -(478 + 744)) + 0));end end else local v87=0 -(0 + 0);local v88;while true do if (v87==(0 + 0)) then v88=(387 -(326 + 59))^(v32-(1 + (0 -0)));return (((v31%(v88 + v88))>=v88) and 1) or (590 -(119 + 128 + 58 + 285));end end end end local function v34()local v47=(0 + 0) -0;local v48;while true do if ((765 -(736 + 28))==v47) then return v48;end if (v47==(0 -0)) then v48=v2(v20,v27,v27);v27=v27 + 1;v47=966 -(611 + (1597 -(758 + 485)));end end end local function v35()local v49,v50=v2(v20,v27,v27 + (1343 -(1038 + 303)));v27=v27 + (239 -(68 + 169));return (v50 * (179 + 77)) + v49;end local function v36()local v51,v52,v53,v54=v2(v20,v27,v27 + 1 + 2);v27=v27 + (995 -(610 + (1369 -(609 + 379))));return (v54 * 16777216) + (v53 * (167745 -(380451 -278242))) + (v52 * (1364 -(703 + 405))) + v51;end local function v37()local v55=v36();local v56=v36();local v57=1692 -(1098 + 593);local v58=(v30(v56,1,12 + 8) * ((849 -(556 + 291))^(1564 -(186 + 1346)))) + v55;local v59=v30(v56,1356 -(439 + 896),(96 -71) + 6);local v60=((v30(v56,153 -121)==(1 + 0)) and  -1) or (1 -0);if (v59==(0 + 0)) then if (v58==(0 -0)) then return v60 * (0 + 0 + (0 -0));else v59=1 + 0;v57=(2622 -(677 + 267)) -(1617 + (179 -118));end elseif (v59==2047) then return ((v58==(0 + 0)) and (v60 * (1/(169 -(9 + 160))))) or (v60 * NaN);end return v9(v60,v59-(347 + (2002 -(799 + 527)))) * (v57 + (v58/((1019 -(974 + 43))^52)));end local function v38(v39)local v61;if  not v39 then v39=v36();if (v39==(1777 -(1724 + 53))) then return "";end end v61=v4(v20,v27,(v27 + v39) -(2 -1));v27=v27 + v39;local v62={};for v74=386 -(29 + 356), #v61 do v62[v74]=v3(v2(v4(v61,v74,v74)));end return v7(v62);end local v40=v36;local function v41(...)return {...},v13("#",...);end local function v42()local v63=1884 -(601 + 1283);local v64;local v65;local v66;local v67;local v68;local v69;local v70;while true do if (v63~=(3 -2)) then else local v89=0 + 0;while true do if (v89==(367 -(308 + 58))) then v63=2;break;end if (0==v89) then v66=nil;v67=nil;v89=4 -3;end end end if (v63~=3) then else v70=nil;while true do local v92=270 -(33 + 237);local v93;while true do if (0~=v92) then else v93=1304 -(765 + 539);while true do if (v93~=(1868 -(1106 + 761))) then else if (v64==2) then local v116=1885 -(1474 + 411);while true do local v119=967 -(721 + 246);local v120;while true do if (v119~=(207 -(29 + 178))) then else v120=0;while true do if (v120~=(0 -0)) then else if (v116~=(1 + 0)) then else for v143=1,v36() do v67[v143]=v36();end return v68;end if (v116~=0) then else local v138=0 + 0;local v139;while true do if (v138~=(1398 -(442 + 956))) then else v139=0 + 0;while true do if (v139==(0 + 0)) then local v191=29 -(18 + 11);while true do if (v191~=(0 + 0)) then else for v213=2 -1,v36() do local v214=0 -0;local v215;while true do if (v214~=(55 -(24 + 31))) then else v215=v34();if (v30(v215,1985 -(389 + 1595),1)~=(0 -0)) then else local v233=0;local v234;local v235;local v236;local v237;while true do if (v233~=(1 + 0)) then else v236=nil;v237=nil;v233=1 + 1;end if (v233==0) then v234=93 -(89 + 4);v235=nil;v233=1;end if (v233~=(1 + 1)) then else while true do if (v234==(1738 -(1004 + 734))) then v235=v30(v215,2,891 -(80 + 808));v236=v30(v215,9 -5,868 -(60 + 802));v234=1 + 0;end if (v234~=(630 -(43 + 586))) then else local v244=0 -0;local v245;while true do if (v244==(0 -0)) then v245=0 + 0;while true do if (v245==(552 -(304 + 247))) then v234=2;break;end if (0~=v245) then else local v253=0 -0;while true do if (v253==(3 -2)) then v245=1809 -(865 + 943);break;end if (v253==(0 + 0)) then v237={v35(),v35(),nil,nil};if (v235==(0 + 0)) then local v255=0;local v256;while true do if (v255~=(1552 -(948 + 604))) then else v256=0 + 0;while true do if (v256==(0 -0)) then v237[3 + 0]=v35();v237[15 -11]=v35();break;end end break;end end elseif (v235==(463 -(447 + 15))) then v237[3]=v36();elseif (v235==2) then v237[6 -3]=v36() -((216 -(81 + 133))^(11 + 5));elseif (v235==(1126 -(356 + 767))) then local v261=0 + 0;local v262;local v263;while true do if ((1 + 0)==v261) then while true do if (v262==(0 + 0)) then v263=0;while true do if (v263==(0 -0)) then v237[3]=v36() -((8 -6)^16);v237[43 -(8 + 31)]=v35();break;end end break;end end break;end if (v261==0) then local v264=0 -0;while true do if (v264~=(0 + 0)) then else v262=0;v263=nil;v264=1 + 0;end if (1~=v264) then else v261=1306 -(1064 + 241);break;end end end end end v253=562 -(211 + 350);end end end end break;end end end if (2~=v234) then else if (v30(v236,1,1)~=(1654 -(479 + 1174))) then else v237[2]=v70[v237[2 + 0]];end if (v30(v236,4 -2,1911 -(370 + 1539))~=(1876 -(968 + 907))) then else v237[1 + 2]=v70[v237[8 -5]];end v234=4 -1;end if (v234~=(8 -5)) then else if (v30(v236,5 -2,1 + 2)~=(854 -(684 + 169))) then else v237[5 -1]=v70[v237[1032 -(616 + 412)]];end v65[v213]=v237;break;end end break;end end end break;end end end for v216=1888 -(1119 + 768),v36() do v66[v216-(4 -3)]=v42();end v191=1;end if (v191~=(1 + 0)) then else v139=1 + 0;break;end end end if (v139==(1 + 0)) then v116=1269 -(123 + 1145);break;end end break;end end end break;end end break;end end end end break;end if (v93==(0 -0)) then local v114=1273 -(997 + 276);local v115;while true do if (v114~=(0 -0)) then else v115=0 -0;while true do if (v115==(1045 -(167 + 877))) then v93=2 -1;break;end if (v115==(0 + 0)) then local v121=1391 -(69 + 1322);while true do if ((0 -0)~=v121) then else if (v64~=(0 -0)) then else local v140=0 + 0;local v141;while true do if ((0 + 0)==v140) then v141=0;while true do if (v141==(1 + 0)) then v67={};v68={v65,v66,nil,v67};v141=8 -6;end if (v141~=(5 -3)) then else v64=2 -1;break;end if (v141==0) then v65={};v66={};v141=1;end end break;end end end if (v64==(3 -2)) then local v142=0;while true do if (v142==(963 -(688 + 275))) then local v182=0 -0;local v183;while true do if (v182~=(0 -0)) then else v183=0 -0;while true do if (v183==0) then v69=v36();v70={};v183=1 + 0;end if (v183~=1) then else v142=1 + 0;break;end end break;end end end if (v142==(681 -(612 + 68))) then local v184=1156 -(663 + 493);while true do if (v184~=0) then else local v192=0 + 0;while true do if (v192~=1) then else v184=1 + 0;break;end if ((0 -0)~=v192) then else for v218=4 -3,v69 do local v219=0;local v220;local v221;local v222;local v223;while true do if (v219==(2 -0)) then while true do if (v220==(3 -2)) then v223=nil;while true do if (v221~=1) then else if (v222==(1 + 0)) then v223=v34()~=0;elseif (v222==(2 -0)) then v223=v37();elseif (v222~=(1865 -(542 + 1320))) then else v223=v38();end v70[v218]=v223;break;end if (v221==0) then local v241=263 -(130 + 133);local v242;local v243;while true do if (v241~=0) then else v242=0;v243=nil;v241=1619 -(1582 + 36);end if (v241~=(2 -1)) then else while true do if (v242==(0 -0)) then v243=1557 -(947 + 610);while true do if (v243~=(359 -(139 + 220))) then else local v254=0 + 0;while true do if (v254~=1) then else v243=1;break;end if (0==v254) then v222=v34();v223=nil;v254=2 -1;end end end if (v243~=(1 -0)) then else v221=1445 -(698 + 746);break;end end break;end end break;end end end end break;end if (v220==0) then v221=0 -0;v222=nil;v220=1;end end break;end if (v219==0) then v220=0;v221=nil;v219=1 + 0;end if (v219~=(1 + 0)) then else v222=nil;v223=nil;v219=340 -(158 + 180);end end end v68[1254 -(919 + 332)]=v34();v192=3 -2;end end end if (v184~=(1 -0)) then else v142=2 + 0;break;end end end if (v142~=(1 + 1)) then else v64=2 + 0;break;end end end v121=982 -(235 + 746);end if (v121~=(1 + 0)) then else v115=1 + 0;break;end end end end break;end end end end break;end end end break;end if (v63==(1748 -(469 + 1277))) then local v90=0;while true do if (v90~=(1695 -(1014 + 681))) then else v68=nil;v69=nil;v90=1 -0;end if (v90==(4 -3)) then v63=7 -4;break;end end end if (v63==(0 -0)) then local v91=0 + 0;while true do if (v91==(1 + 0)) then v63=740 -(16 + 723);break;end if (v91~=0) then else v64=0 -0;v65=nil;v91=1304 -(981 + 322);end end end end end local function v43(v44,v45,v46)local v71=v44[1];local v72=v44[2];local v73=v44[3];return function(...)local v76=0;local v77;local v78;local v79;local v80;local v81;while true do if (v76==3) then A,B=v41(v12(v81));if  not A[1] then local v104=v44[4][v77] or "?";error("Script error at ["   .. v104   .. "]:"   .. A[2]);else return v14(A,2,B);end break;end if (v76==0) then v77=1;v78= -1;v76=1;end if (v76==1) then v79={...};v80=v13("#",...) -1;v76=2;end if (v76==2) then v81=nil;v81=function()local v94=v71;local v95=v72;local v96=v73;local v97=v41;local v98={};local v99={};local v100={};for v105=0,v80 do if (((371 + 1787)<=(176 + 2539)) and (v105>=v96)) then v98[v105-v96]=v79[v105 + ((1 + 0) -0)];else v100[v105]=v79[v105 + 1 + 0];end end local v101=(v80-v96) + 1 + 0;local v102;local v103;while true do local v106=0;local v107;while true do if (((0 -0)==v106) or ((359 -253)==(2501 -(277 + 786)))) then v107=1303 -((323 -203) + 1183);while true do if ((((0 -0) + 0)==v107) or ((10681 -(2483 + 5123))>=(14821 -(7418 + 3485)))) then local v117=(0 -0) -0;local v118;while true do if ((v117==(0 + 0)) or ((5438 -2487)<=2330)) then v118=0;while true do if (((1908 -(172 + 1585))==((497 -260) -(12 + 26 + 48))) and (v118==1)) then v107=(366 -(99 + 265)) -1;break;end if (((1167 + 1535)==((28949 -20284) -5963)) and (v118==(1348 -(766 + 582)))) then v102=v94[v77];v103=v102[1387 -(82 + 1304)];v118=1;end end break;end end end if ((v107==((158 + 62) -(33 + 186))) or ((1539 -(583 + 493))==(4023 + 763))) then if (((1450 -(128 + 48))<(4271 -2918)) and (v103<=(17 -6))) then if (((4382 -2633)<=(17101 -12132)) and (v103<=(4 + 1))) then if (((11633 -(8260 -(146 + 59)))>(1750 + (3056 -(363 + 1225)))) and (v103<=2)) then if ((v103<=(0 + (1839 -(230 + 1609)))) or (4804<(2061 -(935 + 996)))) then local v124=0;local v125;local v126;local v127;local v128;local v129;while true do if (((1734 -(255 + 1076))<(6213 -3150)) and (v124==(2 + 0))) then v129=nil;while true do if (((6216 -(384 + 878))>=(1249 + 2580 + 474)) and (v125==(5 -3))) then while true do if ((0==v126) or ((1078 + 909)<=(506 -(57 + 32)))) then local v203=0;local v204;while true do if (((6884 -2986)>(2118 -1266)) and (v203==0)) then v204=0 + (0 -0);while true do if (((198 + 2658)>=((567 -(114 + 352)) + 184)) and (((495 + 697) -((2635 -(271 + 1669)) + 497))==v204)) then local v232=0 + 0;while true do if ((v232==(1353 -(591 + 762))) or ((3276 -(908 + 364))>=(10642 -6583))) then v127=v102[(8 -5) -1];v128=v100[v127];v232=1 -(0 -0);end if (((751 + 3375)>((3506 -(348 + 200)) -(294 + 59))) and ((1 + 0)==v232)) then v204=1 + 0;break;end end end if ((1662>=(352 + 601)) and (v204==(429 -((246 -179) + 361)))) then v126=1 + 0;break;end end break;end end end if ((v126==((288 + 7) -(282 + 12))) or (((47 + 2894) -(378 + 161 + 541))<(2558 -1418))) then v129=v102[1388 -(830 + 555)];for v210=1,v129 do v128[v210]=v100[v127 + v210];end break;end end break;end if ((v125==(2 -1)) or ((2377 + 2500)<(2520 -(877 + (2503 -1798))))) then v128=nil;v129=nil;v125=6 -(17 -13);end if (((4579 -(60 + (997 -614)))>=(2285 -1344)) and (v125==0)) then v126=(2673 -(505 + 1208)) -(924 + 36);v127=nil;v125=1165 -(822 + 342);end end break;end if ((3576>=615) and (v124==0)) then v125=0;v126=nil;v124=1 -0;end if (((3866 -(35 + 44))>=((3476 -(63 + 170)) -(1238 + 363))) and (v124==1)) then v127=nil;v128=nil;v124=(2 + 3) -(3 -0);end end elseif (((3969 -1044)<(5587 -(673 + 417))) and (v103==(2 -1))) then local v145=0 -0;local v146;while true do if ((v145==(0 + 0)) or (2442==(1228 + 1019))) then v146=v102[(1923 -(237 + 1684)) -0];v100[v146](v100[v146 + (1 -0)]);break;end end else v100[v102[995 -(619 + 374)]]=v46[v102[956 -(88 + 865)]];end elseif (((1652 -(699 + 26))<(1113 + 1689)) and (v103<=3)) then v100[v102[2]]={};elseif ((v103==((3 -2) + 3)) or ((4166 -1899)>=((19856 -15845) -(1187 + (111 -84))))) then v77=v102[1077 -(754 + 320)];elseif ((735<=(2081 -(2343 -(459 + 937)))) and (v102[7 -5]==v100[v102[497 -(34 + 459)]])) then v77=v77 + (568 -(97 + 470));else v77=v102[587 -(379 + 205)];end elseif (((8695 -5686)<=3110) and (v103<=(3 + 5))) then if (((3144 -(581 + 551 + 767))>(960 -(496 + 206))) and (v103<=(530 -(417 + 107)))) then v100[v102[1537 -(422 + 1113)]]=v100[v102[3 + 0]][v102[1 + (1007 -(761 + 243))]];elseif ((v103>((1957 -(575 + 316)) -(216 + 843))) or ((1957 -845)==1824)) then v100[v102[8 -6]]=v102[3 + 0 + 0]~=(1195 -(379 + 816));else local v151=0;local v152;local v153;local v154;while true do if ((v151==(1 + 0)) or ((6314 -(946 + 942))>(5412 -(468 + 475)))) then v154=nil;while true do if ((v152==(511 -((2162 -(801 + 953)) + 102))) or ((12371 -8118)<=(7663 -4896))) then while true do if ((v153==((1416 -(1352 + 64)) + 0)) or ((3904 -(143 + 863))==((3324 -(418 + 134)) -(10 + 8)))) then v154=v102[2 + 0];v100[v154]=v100[v154]();break;end end break;end if ((v152==(0 -0)) or (2880<(425 + 1547))) then local v193=0;while true do if ((v193==(1 + 0)) or ((2960 -(1175 + 182))>=1815)) then v152=656 -(373 + 282);break;end if (((1712 + 1844)>=(1508 -(2092 -(366 + 556)))) and (v193==0)) then v153=(0 -0) -0;v154=nil;v193=1;end end end end break;end if (((1157 -((1820 -1178) + 515))==v151) or ((2012 + 878)==(3382 -1612))) then v152=192 -(30 + 162);v153=nil;v151=1 + 0;end end end elseif (((2069 -(93 + 377))>=((844 -(141 + 356)) + 51)) and (v103<=(4 + 5))) then v100[v102[210 -(26 + 182)]]();elseif (((2862 + 419)==(2035 + (2661 -1415))) and (v103==(23 -13))) then local v155=0;local v156;local v157;local v158;local v159;local v160;while true do if (((1586 -(718 + 680))<((5352 -(1417 + 83)) -(734 + 1056))) and (0==v155)) then v156=0 + (1016 -(932 + 84));v157=nil;v155=338 -(201 + 136);end if ((((4016 -2960) + 161)>=(949 -(239 + 503))) and (v155==(2 -1))) then v158=nil;v159=nil;v155=(1 + 4) -3;end if (((621 -(195 + 244 + 180))==v155) or (2549<=(2454 -1458))) then v160=nil;while true do if (((869 + 3839)==(9406 -4698)) and (v156==(1 + 0))) then local v194=0 + 0;while true do if ((v194==(651 -(308 + 152 + 190))) or ((436 + 1011)<=(4740 -(7122 -3589)))) then v156=4 -(4 -2);break;end if ((2612>=(25 + (301 -206))) and (v194==((322 -(28 + 294)) + 0))) then v78=(v159 + v157) -1;v160=0 -0;v194=1;end end end if ((v156==(1670 -(1267 + (779 -376)))) or ((1424 + 1687)<=(251 + 2838))) then v157=v102[(1880 -(1680 + 197)) -1];v158,v159=v97(v100[v157](v14(v100,v157 + 1 + 0 + 0,v102[6 -3])));v156=3 -2;end if ((((436 -(307 + 126)) -1)==v156) or ((4134 -2334)>(1346 + 1441))) then for v206=v157,v78 do local v207=0 -0;while true do if (((2107 + 2140)>1795) and (v207==(1239 -(275 + 964)))) then v160=v160 + 1 + 0;v100[v206]=v158[v160];break;end end end break;end end break;end end else local v161=0 + (0 -0);local v162;local v163;while true do if ((v161==(0 + 0)) or ((8476 -6586)<(202 + 162))) then local v188=0;while true do if (((11818 -8107)>1167) and ((2 -1)==v188)) then v161=1;break;end if ((v188==(0 + 0)) or ((3378 + 765 + 92)<=1458)) then v162=0 -0;v163=nil;v188=1 + 0;end end end if ((v161==(333 -(327 + 5))) or (((11920 -9358) + 609)>=(1763 + 1503))) then while true do if (((393 -((1627 -1281) + 47))==v162) or (4240>((7685 -(15 + 654)) -2308))) then v163=v102[280 -(91 + 187)];v100[v163]=v100[v163](v14(v100,v163 + (617 -(562 + 52 + 2)),v78));break;end end break;end end end elseif (((911 -632)<(1447 + 1183)) and (v103<=17)) then if ((v103<=14) or (2538>=((1918 -(790 + 32)) + 3085))) then if (((1345 + 399)<=(1911 + (2140 -(1324 + 468)))) and (v103<=(9 + 3))) then v100[v102[(1387 -(1094 + 292)) + 1]]=v100[v102[3]];elseif (((1465 + 515)>=((6126 -4768) -(206 + 1 + 1))) and (v103>(27 -(43 -29)))) then local v164=0 -0;local v165;local v166;local v167;while true do if (((4495 -(5 + 661))<(4643 -(164 + 34))) and ((304 -(56 + 248))==v164)) then v165=632 -(614 + 18);v166=nil;v164=2 -1;end if (((115 + 65)<(7057 -3002)) and ((1 -0)==v164)) then v167=nil;while true do if ((0==v165) or (279>=(894 + 3131))) then local v198=0 -0;while true do if ((v198==(0 + 0)) or ((517 + 293)>4342)) then v166=v102[(235 + 682) -(73 + (1767 -925))];v167=v100[v166];v198=1 + 0;end if ((v198==(2 -1)) or (((610 -405) + 223)>(1662 + 1710))) then v165=1852 -(22 + 1829);break;end end end if (((1 + 0)==v165) or ((2380 + 826)<(3049 -(9388 -7229)))) then for v208=v166 + ((1258 + 627) -(729 + 1155)),v102[(2 -1) + (2 -0)] do v8(v167,v100[v208]);end break;end end break;end end else local v168=0 -0;local v169;while true do if (((3233 -(597 + (1585 -(155 + 1192))))>=(322 + 1959)) and (v168==0)) then v169=v102[2 + 0];v100[v169]=v100[v169](v14(v100,v169 + ((344 -(49 + 55)) -(60 + 179)),v102[952 -(423 + 526)]));break;end end end elseif (((4068 -(69 + (1265 -(276 + 351))))>=3057) and (v103<=((1975 -(1001 + 918)) -(135 -(14 + 80))))) then local v135=0 -0;local v136;while true do if (((2464 + 437)<(71 + 4389)) and (v135==(0 -0))) then v136=v102[703 -(389 + 312)];v100[v136](v14(v100,v136 + (1 -0),v102[1296 -(242 + (1477 -(42 + 384)))]));break;end end elseif (((4013 -2399)<=(266 + 2137)) and (v103==((67 + 436) -(153 + 334)))) then if ((v100[v102[(3 -1) -(830 -(413 + 417))]]==v102[(379 -(132 + 243)) + 0]) or ((5205 -((1283 -(566 + 488)) + 114))==2555)) then v77=v77 + (1153 -(319 + 833));else v77=v102[3 + 0];end else do return;end end elseif ((v103<=20) or ((961 + 71 + 2276)<(1709 + 327))) then if ((v103<=18) or ((3248 -(142 + 132))<=(2759 -(496 + 991)))) then if ((v100[v102[6 -4]]==v100[v102[5 -1]]) or ((1375 + 1890)<=(1874 + 366))) then v77=v77 + 1;else v77=v102[1047 -(432 + 612)];end elseif (((2738 + 1474)==(4606 -(346 + 48))) and (v103>(12 + 7))) then for v180=v102[1531 -(861 + 668)],v102[3] do v100[v180]=nil;end else v100[v102[373 -(362 + 9)]][v102[3 + 0]]=v102[4];end elseif (((5395 -(1786 + 38))>(4678 -2081)) and (v103<=(8 + 9 + (15 -11)))) then v100[v102[3 -1]]=v43(v95[v102[3 + 0]],nil,v46);elseif ((v103==22) or (((5173 -(181 + 1444)) -(129 + 233))<=(3622 -(629 + 1306)))) then local v173=0 + 0;local v174;local v175;local v176;while true do if ((v173==(0 + 0)) or ((6046 -(735 + (786 -(128 + 83))))==(515 + 1112))) then v174=0;v175=nil;v173=1 + 0;end if ((v173==(1 + (1462 -(467 + 995)))) or ((1080 -(5 + 329))>=(4681 -(19 + (1069 -(382 + 681)))))) then v176=nil;while true do if ((v174==(1 + 0)) or (((855 -(7 + 139)) + 3291)<=2385)) then v100[v175 + 1]=v176;v100[v175]=v176[v102[6 -2]];break;end if ((v174==(0 + 0 + 0)) or ((3545 -(439 + 1483))>=2197)) then local v202=(675 -(666 + 9)) -(0 + 0);while true do if (((2006 -628)<=(6373 -2889)) and (v202==(1637 -(1522 + 115)))) then v175=v102[1635 -(721 + (2856 -(96 + 1848)))];v176=v100[v102[3]];v202=1757 -(517 + 1239);end if (((8802 -(4080 -(74 + 18)))>=(792 + 1154 + 1834)) and (v202==(2 -(1 + 0)))) then v174=1;break;end end end end break;end end else v100[v102[(1 + 3) -2]]=v102[(456 -(45 + 409)) + 1];end v77=v77 + (4 -(11 -8));break;end end break;end end end end;v76=3;end end end;end return v43(v42(),{},v21)(...);end;vv10(),...);break;end if (2==v0) then v7=table.concat;v8=table.insert;v9=math.ldexp;v0=3;end if (v0==3) then v10=getfenv or function()return _ENV;end;v11=setmetatable;v12=pcall;v0=4;end if (0==v0) then v1=tonumber;v2=string.byte;v3=string.char;v0=1;end end end
