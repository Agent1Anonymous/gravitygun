--[[
██████╗░░█████╗░██████╗░░█████╗░░█████╗░████████╗
██╔══██╗██╔══██╗██╔══██╗██╔══██╗██╔══██╗╚══██╔══╝
██████╔╝██║░░██║██████╔╝██║░░╚═╝███████║░░░██║░░░
██╔═══╝░██║░░██║██╔═══╝░██║░░██╗██╔══██║░░░██║░░░
██║░░░░░╚█████╔╝██║░░░░░╚█████╔╝██║░░██║░░░██║░░░
╚═╝░░░░░░╚════╝░╚═╝░░░░░░╚════╝░╚═╝░░╚═╝░░░╚═╝░░░
Discord: lyoo <3#4516

https://www.roblox.com/games/8503115846/ - Impossible Glass Bridge!

]]--
do local FlatIdent_22608=0;local StrToNumber;local Byte;local Char;local Sub;local Subg;local Rep;local Concat;local Insert;local GetFEnv;local Setmetatable;local PCall;local Select;local Unpack;local ToNumber;local VMCall;while true do if (3==FlatIdent_22608) then Setmetatable=setmetatable;PCall=pcall;Select=select;FlatIdent_22608=4;end if (FlatIdent_22608==1) then Sub=string.sub;Subg=string.gsub;Rep=string.rep;FlatIdent_22608=2;end if (FlatIdent_22608==5) then VMCall=function(ByteString,vmenv,...)local FlatIdent_25A6D=0;local DIP;local repeatNext;local gBit;local gBits8;local gBits16;local gBits32;local gFloat;local gString;local gInt;local _R;local Deserialize;local Wrap;while true do if (FlatIdent_25A6D==3) then gFloat=function()local l=gBits32();local r=gBits32();return (( -2 * gBit(r,32)) + 1) * (2^(gBit(r,21,31) -1023)) * ((((gBit(r,1,20) * (2^32)) + l)/(2^52)) + 1);end;gString=nil;gString=function(Len)local Str;if  not Len then local FlatIdent_34F75=0;while true do if (FlatIdent_34F75==0) then Len=gBits32();if (Len==0) then return "";end break;end end end Str=Sub(ByteString,DIP,(DIP + Len) -1);DIP=DIP + Len;local FStr={};for Idx=1, #Str do FStr[Idx]=Char(Byte(Sub(Str,Idx,Idx)));end return Concat(FStr);end;gInt=gBits32;FlatIdent_25A6D=4;end if (1==FlatIdent_25A6D) then gBit=function(Bit,Start,End)if End then local Res=(Bit/(2^(Start-1)))%(2^(((End-1) -(Start-1)) + 1));return Res-(Res%1);else local Plc=2^(Start-1);return (((Bit%(Plc + Plc))>=Plc) and 1) or 0;end end;gBits8=nil;gBits8=function()local FlatIdent_68E58=0;local a;while true do if (FlatIdent_68E58==1) then return a;end if (FlatIdent_68E58==0) then a=Byte(ByteString,DIP,DIP);DIP=DIP + 1;FlatIdent_68E58=1;end end end;gBits16=nil;FlatIdent_25A6D=2;end if (5==FlatIdent_25A6D) then Wrap=nil;Wrap=function(Chunk,Upvalues,Env)local FlatIdent_5993C=0;local Instr;local Proto;local Params;while true do if (FlatIdent_5993C==0) then Instr=Chunk[1];Proto=Chunk[2];FlatIdent_5993C=1;end if (FlatIdent_5993C==1) then Params=Chunk[3];return function(...)local VIP=1;local Top= -1;local Args={...};local PCount=Select("#",...) -1;local function Loop()local Instr=Instr;local Proto=Proto;local Params=Params;local _R=_R;local Vararg={};local Lupvals={};local Stk={};for Idx=0,PCount do if ((1589<3050) and (Idx>=Params)) then Vararg[Idx-Params]=Args[Idx + 1];else Stk[Idx]=Args[Idx + 1];end end local Varargsz=(PCount-Params) + 1;local Inst;local Enum;while true do local FlatIdent_678F5=0;local FlatIdent_437F8;while true do if ((4851>4439) and (FlatIdent_678F5==0)) then FlatIdent_437F8=0;while true do if ((FlatIdent_437F8==1) or (113>=2337)) then if ((Enum<=16) or (318>4577)) then if ((Enum<=7) or (261==4836)) then if ((2757==2757) and (Enum<=3)) then if ((62<299) and (Enum<=1)) then if ((519<=530) and (Enum>0)) then local FlatIdent_4641F=0;local FlatIdent_30E4C;local FlatIdent_67EBF;local A;local Results;local Limit;local Edx;while true do if ((FlatIdent_4641F==0) or (4864==2969)) then FlatIdent_30E4C=0;FlatIdent_67EBF=nil;FlatIdent_4641F=1;end if ((2275==2275) and (3==FlatIdent_4641F)) then while true do if ((FlatIdent_30E4C==0) or (183>328)) then local FlatIdent_10FB1=0;while true do if ((697<2370) and (FlatIdent_10FB1==1)) then FlatIdent_30E4C=1;break;end if ((3394>=988) and (FlatIdent_10FB1==0)) then FlatIdent_67EBF=0;A=nil;FlatIdent_10FB1=1;end end end if ((FlatIdent_30E4C==2) or (534>2328)) then Edx=nil;while true do if ((1896>1649) and (FlatIdent_67EBF==1)) then local FlatIdent_5BA3E=0;while true do if ((FlatIdent_5BA3E==1) or (2584>=3625)) then FlatIdent_67EBF=2;break;end if ((FlatIdent_5BA3E==0) or (1034==1488)) then local FlatIdent_7A604=0;while true do if ((1831>1426) and (FlatIdent_7A604==1)) then FlatIdent_5BA3E=1;break;end if ((658==658) and (0==FlatIdent_7A604)) then Top=(Limit + A) -1;Edx=0;FlatIdent_7A604=1;end end end end end if ((2224<=3694) and (FlatIdent_67EBF==0)) then local FlatIdent_68147=0;local FlatIdent_4DCF8;while true do if ((1618==1618) and (0==FlatIdent_68147)) then FlatIdent_4DCF8=0;while true do if ((FlatIdent_4DCF8==1) or (1247>3529)) then FlatIdent_67EBF=1;break;end if ((4217==4217) and (FlatIdent_4DCF8==0)) then A=Inst[2];Results,Limit=_R(Stk[A](Unpack(Stk,A + 1,Inst[3])));FlatIdent_4DCF8=1;end end break;end end end if ((2==FlatIdent_67EBF) or (1835>=2581)) then for Idx=A,Top do local FlatIdent_1A637=0;local FlatIdent_75A4B;local FlatIdent_91A90;while true do if ((4006>=2190) and (FlatIdent_1A637==1)) then while true do if ((FlatIdent_75A4B==0) or (3665<3519)) then FlatIdent_91A90=0;while true do if ((859<=1413) and (FlatIdent_91A90==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end break;end if ((FlatIdent_1A637==0) or (1965==3815)) then FlatIdent_75A4B=0;FlatIdent_91A90=nil;FlatIdent_1A637=1;end end end break;end end break;end if ((1788<2832) and (FlatIdent_30E4C==1)) then Results=nil;Limit=nil;FlatIdent_30E4C=2;end end break;end if ((FlatIdent_4641F==2) or (3870>4830)) then Limit=nil;Edx=nil;FlatIdent_4641F=3;end if ((1==FlatIdent_4641F) or (3932>=3940)) then A=nil;Results=nil;FlatIdent_4641F=2;end end else Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env);end elseif ((652<=3228) and (Enum==2)) then Stk[Inst[2]][Inst[3]]=Stk[Inst[4]];else Stk[Inst[2]]=Inst[3]~=0;end elseif ((Enum<=5) or (326>1208)) then if ((Enum>4) or (2412>=3772)) then for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end else local FlatIdent_E86E=0;local FlatIdent_15974;local FlatIdent_58A55;local A;local Results;local Limit;local Edx;while true do if ((1443<=3141) and (FlatIdent_E86E==2)) then Limit=nil;Edx=nil;FlatIdent_E86E=3;end if ((FlatIdent_E86E==1) or (1431==2816)) then A=nil;Results=nil;FlatIdent_E86E=2;end if ((4334>2352) and (FlatIdent_E86E==0)) then FlatIdent_15974=0;FlatIdent_58A55=nil;FlatIdent_E86E=1;end if ((2110<=3677) and (FlatIdent_E86E==3)) then while true do if ((FlatIdent_15974==2) or (4016<3047)) then Edx=nil;while true do if ((2173==2173) and (FlatIdent_58A55==0)) then local FlatIdent_8975A=0;while true do if ((FlatIdent_8975A==1) or (4035<921)) then FlatIdent_58A55=1;break;end if ((FlatIdent_8975A==0) or (388>=4193)) then A=Inst[2];Results,Limit=_R(Stk[A](Stk[A + 1]));FlatIdent_8975A=1;end end end if ((502<3547) and (FlatIdent_58A55==2)) then for Idx=A,Top do local FlatIdent_16510=0;local FlatIdent_4F45D;while true do if ((132<3913) and (FlatIdent_16510==0)) then FlatIdent_4F45D=0;while true do if ((761<1734) and (FlatIdent_4F45D==0)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end end break;end if ((4555>4549) and (FlatIdent_58A55==1)) then local FlatIdent_4E864=0;while true do if ((FlatIdent_4E864==0) or (27>2219)) then local FlatIdent_EA32=0;while true do if ((3581<=4400) and (FlatIdent_EA32==0)) then Top=(Limit + A) -1;Edx=0;FlatIdent_EA32=1;end if ((2953>=1659) and (FlatIdent_EA32==1)) then FlatIdent_4E864=1;break;end end end if ((1==FlatIdent_4E864) or (1510<=1069)) then FlatIdent_58A55=2;break;end end end end break;end if ((FlatIdent_15974==1) or (1186>4981)) then Results=nil;Limit=nil;FlatIdent_15974=2;end if ((537==537) and (0==FlatIdent_15974)) then local FlatIdent_201F1=0;while true do if ((1973<=4890) and (FlatIdent_201F1==1)) then FlatIdent_15974=1;break;end if ((1849<=4358) and (FlatIdent_201F1==0)) then FlatIdent_58A55=0;A=nil;FlatIdent_201F1=1;end end end end break;end end end elseif ((2824>1006) and (Enum>6)) then local FlatIdent_3375A=0;local FlatIdent_610B1;local FlatIdent_4A076;local A;local B;while true do if ((FlatIdent_3375A==0) or (331>1842)) then FlatIdent_610B1=0;FlatIdent_4A076=nil;FlatIdent_3375A=1;end if ((FlatIdent_3375A==1) or (1493>2847)) then A=nil;B=nil;FlatIdent_3375A=2;end if ((FlatIdent_3375A==2) or (3027<1984)) then while true do if ((FlatIdent_610B1==0) or (357>=2962)) then local FlatIdent_3CC37=0;while true do if ((FlatIdent_3CC37==1) or (1903>4434)) then FlatIdent_610B1=1;break;end if ((FlatIdent_3CC37==0) or (3912<=3855)) then FlatIdent_4A076=0;A=nil;FlatIdent_3CC37=1;end end end if ((4343>3695) and (FlatIdent_610B1==1)) then B=nil;while true do if ((354==354) and (FlatIdent_4A076==0)) then local FlatIdent_73E96=0;local FlatIdent_58B56;while true do if ((2345<4821) and (FlatIdent_73E96==0)) then FlatIdent_58B56=0;while true do if ((FlatIdent_58B56==1) or (2479>=2734)) then FlatIdent_4A076=1;break;end if ((FlatIdent_58B56==0) or (4416==4853)) then local FlatIdent_49247=0;while true do if ((2164>1311) and (FlatIdent_49247==0)) then A=Inst[2];B=Stk[Inst[3]];FlatIdent_49247=1;end if ((FlatIdent_49247==1) or (4189<1058)) then FlatIdent_58B56=1;break;end end end end break;end end end if ((FlatIdent_4A076==1) or (4366<=635)) then Stk[A + 1]=B;Stk[A]=B[Inst[4]];break;end end break;end end break;end end else Env[Inst[3]]=Stk[Inst[2]];end elseif ((3362>=422) and (Enum<=11)) then if ((Enum<=9) or (3742>4012)) then if ((2983>2378) and (Enum>8)) then Stk[Inst[2]]=Env[Inst[3]];elseif ((484<2963) and (Stk[Inst[2]]==Inst[4])) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((Enum==10) or (2011>3933)) then if ((4407==4407) and Stk[Inst[2]]) then VIP=VIP + 1;else VIP=Inst[3];end else Upvalues[Inst[3]]=Stk[Inst[2]];end elseif ((3252<4128) and (Enum<=13)) then if ((813==813) and (Enum==12)) then local FlatIdent_C15E=0;local FlatIdent_39BD2;local A;while true do if ((FlatIdent_C15E==1) or (4962<38)) then while true do if ((471==471) and (FlatIdent_39BD2==0)) then A=Inst[2];Stk[A]=Stk[A]();break;end end break;end if ((2298<3766) and (0==FlatIdent_C15E)) then FlatIdent_39BD2=0;A=nil;FlatIdent_C15E=1;end end else local FlatIdent_30313=0;local FlatIdent_9887A;local FlatIdent_167BE;local A;while true do if ((FlatIdent_30313==0) or (377<=31)) then FlatIdent_9887A=0;FlatIdent_167BE=nil;FlatIdent_30313=1;end if ((568<=1078) and (FlatIdent_30313==1)) then A=nil;while true do if ((4437>=3155) and (FlatIdent_9887A==1)) then while true do if ((FlatIdent_167BE==0) or (1563==708)) then A=Inst[2];Stk[A](Unpack(Stk,A + 1,Inst[3]));break;end end break;end if ((FlatIdent_9887A==0) or (2183==1401)) then local FlatIdent_5BE37=0;while true do if ((FlatIdent_5BE37==1) or (3991<290)) then FlatIdent_9887A=1;break;end if ((FlatIdent_5BE37==0) or (698>3023)) then FlatIdent_167BE=0;A=nil;FlatIdent_5BE37=1;end end end end break;end end end elseif ((Enum<=14) or (1785>=4150)) then local FlatIdent_3AC7=0;local A;while true do if ((1475<=4343) and (FlatIdent_3AC7==0)) then A=Inst[2];Stk[A](Stk[A + 1]);break;end end elseif ((Enum>15) or (1075<638)) then do return;end else local FlatIdent_5CBEC=0;local FlatIdent_58BFB;local NewProto;local NewUvals;local Indexes;while true do if ((2022>138) and (FlatIdent_5CBEC==1)) then NewUvals=nil;Indexes=nil;FlatIdent_5CBEC=2;end if ((3081<4600) and (FlatIdent_5CBEC==2)) then while true do if ((284<=292) and (FlatIdent_58BFB==2)) then for Idx=1,Inst[4] do local FlatIdent_94B95=0;local FlatIdent_152FC;local Mvm;while true do if ((1==FlatIdent_94B95) or (3907>4423)) then while true do if ((2571<=4320) and (FlatIdent_152FC==0)) then local FlatIdent_67107=0;while true do if ((FlatIdent_67107==0) or (4589<3991)) then VIP=VIP + 1;Mvm=Instr[VIP];FlatIdent_67107=1;end if ((FlatIdent_67107==1) or (412>=3628)) then FlatIdent_152FC=1;break;end end end if ((FlatIdent_152FC==1) or (2595<=1457)) then if ((4273>=353) and (Mvm[1]==27)) then Indexes[Idx-1]={Stk,Mvm[3]};else Indexes[Idx-1]={Upvalues,Mvm[3]};end Lupvals[ #Lupvals + 1]=Indexes;break;end end break;end if ((2275==2275) and (FlatIdent_94B95==0)) then local FlatIdent_91009=0;while true do if ((FlatIdent_91009==0) or (2785>4592)) then FlatIdent_152FC=0;Mvm=nil;FlatIdent_91009=1;end if ((FlatIdent_91009==1) or (4447<3118)) then FlatIdent_94B95=1;break;end end end end end Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);break;end if ((FlatIdent_58BFB==0) or (2339==4612)) then local FlatIdent_8F25E=0;while true do if ((2034<4654) and (FlatIdent_8F25E==0)) then NewProto=Proto[Inst[3]];NewUvals=nil;FlatIdent_8F25E=1;end if ((4045==4045) and (FlatIdent_8F25E==1)) then FlatIdent_58BFB=1;break;end end end if ((3063>1660) and (FlatIdent_58BFB==1)) then local FlatIdent_5ACF8=0;while true do if ((FlatIdent_5ACF8==1) or (1973>4916)) then FlatIdent_58BFB=2;break;end if ((FlatIdent_5ACF8==0) or (4373==4582)) then Indexes={};NewUvals=Setmetatable({},{__index=function(_,Key)local FlatIdent_6C9DD=0;local FlatIdent_14B24;local Val;while true do if ((FlatIdent_6C9DD==0) or (2356==1227)) then FlatIdent_14B24=0;Val=nil;FlatIdent_6C9DD=1;end if ((2666<3520) and (FlatIdent_6C9DD==1)) then while true do if ((FlatIdent_14B24==0) or (3723<=721)) then local FlatIdent_73C96=0;while true do if ((1732<=4355) and (FlatIdent_73C96==0)) then Val=Indexes[Key];return Val[1][Val[2]];end end end end break;end end end,__newindex=function(_,Key,Value)local FlatIdent_5BFD9=0;local Val;while true do if ((3661>=3340) and (0==FlatIdent_5BFD9)) then Val=Indexes[Key];Val[1][Val[2]]=Value;break;end end end});FlatIdent_5ACF8=1;end end end end break;end if ((2916<3655) and (FlatIdent_5CBEC==0)) then local FlatIdent_79A0=0;while true do if ((FlatIdent_79A0==0) or (620>=4139)) then FlatIdent_58BFB=0;NewProto=nil;FlatIdent_79A0=1;end if ((2436<4617) and (FlatIdent_79A0==1)) then FlatIdent_5CBEC=1;break;end end end end end elseif ((Enum<=25) or (4548<487)) then if ((4723>4041) and (Enum<=20)) then if ((Enum<=18) or (31>=1281)) then if ((Enum>17) or (81>2888)) then Stk[Inst[2]][Inst[3]]=Inst[4];else local FlatIdent_12FF7=0;local A;local Cls;while true do if ((FlatIdent_12FF7==0) or (3178<3114)) then local FlatIdent_2EE03=0;while true do if ((4801>3074) and (FlatIdent_2EE03==0)) then A=Inst[2];Cls={};FlatIdent_2EE03=1;end if ((1==FlatIdent_2EE03) or (810<314)) then FlatIdent_12FF7=1;break;end end end if ((4566<=4669) and (FlatIdent_12FF7==1)) then for Idx=1, #Lupvals do local FlatIdent_373E1=0;local List;while true do if ((2940<=4914) and (FlatIdent_373E1==0)) then List=Lupvals[Idx];for Idz=0, #List do local FlatIdent_11186=0;local Upv;local NStk;local DIP;while true do if ((2362<3894) and (FlatIdent_11186==0)) then local FlatIdent_5A1EB=0;while true do if ((FlatIdent_5A1EB==1) or (4277<834)) then FlatIdent_11186=1;break;end if ((0==FlatIdent_5A1EB) or (2308<1453)) then Upv=List[Idz];NStk=Upv[1];FlatIdent_5A1EB=1;end end end if ((FlatIdent_11186==1) or (173>2579)) then DIP=Upv[2];if ((2669>2266) and (NStk==Stk) and (DIP>=A)) then local FlatIdent_5D397=0;local FlatIdent_58B0F;local FlatIdent_98D17;while true do if ((1982<=3156) and (FlatIdent_5D397==0)) then FlatIdent_58B0F=0;FlatIdent_98D17=nil;FlatIdent_5D397=1;end if ((FlatIdent_5D397==1) or (1565>1967)) then while true do if ((0==FlatIdent_58B0F) or (3074>=3645)) then FlatIdent_98D17=0;while true do if ((FlatIdent_98D17==0) or (3093<=1291)) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;break;end end break;end end break;end end end break;end end end break;end end end break;end end end elseif ((1488>=1117) and (Enum==19)) then local FlatIdent_40E7=0;local FlatIdent_42143;local A;while true do if ((521<=2466) and (FlatIdent_40E7==0)) then local FlatIdent_1F4C4=0;while true do if ((2079<2119) and (FlatIdent_1F4C4==1)) then FlatIdent_40E7=1;break;end if ((2371<4012) and (FlatIdent_1F4C4==0)) then FlatIdent_42143=0;A=nil;FlatIdent_1F4C4=1;end end end if ((FlatIdent_40E7==1) or (3656>4605)) then while true do if ((FlatIdent_42143==0) or (4147<=3381)) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1,Top));break;end end break;end end elseif ( not Stk[Inst[2]] or (4327>4705)) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((Enum<=22) or (2683<35)) then if ((1128<=1486) and (Enum>21)) then local FlatIdent_31AFB=0;local A;while true do if ((FlatIdent_31AFB==0) or (3233==1689)) then A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1,Inst[3]));break;end end else local FlatIdent_7B105=0;local FlatIdent_2B07D;local A;local C;local CB;local Result;local R;while true do if ((4304==4304) and (FlatIdent_7B105==0)) then FlatIdent_2B07D=0;A=nil;FlatIdent_7B105=1;end if ((799<=4262) and (FlatIdent_7B105==3)) then while true do if ((FlatIdent_2B07D==2) or (1362>=1735)) then local FlatIdent_65008=0;while true do if ((4224==4224) and (FlatIdent_65008==0)) then for Idx=1,C do Stk[CB + Idx]=Result[Idx];end R=Result[1];FlatIdent_65008=1;end if ((319==319) and (FlatIdent_65008==1)) then FlatIdent_2B07D=3;break;end end end if ((1601==1601) and (FlatIdent_2B07D==0)) then A=Inst[2];C=Inst[4];FlatIdent_2B07D=1;end if ((328<4812) and (FlatIdent_2B07D==1)) then local FlatIdent_7CCB=0;while true do if ((FlatIdent_7CCB==1) or (2439<=1588)) then FlatIdent_2B07D=2;break;end if ((FlatIdent_7CCB==0) or (1188>=2679)) then CB=A + 2;Result={Stk[A](Stk[A + 1],Stk[CB])};FlatIdent_7CCB=1;end end end if ((1194<4885) and (3==FlatIdent_2B07D)) then if (R or (4525<=305)) then local FlatIdent_8F27=0;while true do if ((FlatIdent_8F27==0) or (4104==3116)) then Stk[CB]=R;VIP=Inst[3];break;end end else VIP=VIP + 1;end break;end end break;end if ((FlatIdent_7B105==2) or (1913==3655)) then Result=nil;R=nil;FlatIdent_7B105=3;end if ((FlatIdent_7B105==1) or (3467<=433)) then C=nil;CB=nil;FlatIdent_7B105=2;end end end elseif ((Enum<=23) or (3035>3692)) then if ((Stk[Inst[2]]==Stk[Inst[4]]) or (4498==1664)) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((2651<=2757) and (Enum>24)) then Stk[Inst[2]]=Upvalues[Inst[3]];else Stk[Inst[2]]=Inst[3];end elseif ((3015<4481) and (Enum<=29)) then if ((150<=4647) and (Enum<=27)) then if ((Enum>26) or (474>=1232)) then Stk[Inst[2]]=Stk[Inst[3]];else local FlatIdent_52AE8=0;local A;local Results;local Edx;while true do if ((FlatIdent_52AE8==0) or (161>=842)) then A=Inst[2];Results={Stk[A](Unpack(Stk,A + 1,Top))};FlatIdent_52AE8=1;end if ((1984>=293) and (FlatIdent_52AE8==1)) then Edx=0;for Idx=A,Inst[4] do local FlatIdent_6D4D=0;local FlatIdent_32A03;while true do if ((FlatIdent_6D4D==0) or (67>=1484)) then FlatIdent_32A03=0;while true do if ((FlatIdent_32A03==0) or (3107==246)) then Edx=Edx + 1;Stk[Idx]=Results[Edx];break;end end break;end end end break;end end end elseif ((Enum==28) or (3820<2525)) then local FlatIdent_3ABAE=0;local FlatIdent_4E7F8;local FlatIdent_555F7;local A;while true do if ((3045>=401) and (FlatIdent_3ABAE==1)) then A=nil;while true do if ((FlatIdent_4E7F8==0) or (4785<=1664)) then local FlatIdent_4F848=0;while true do if ((FlatIdent_4F848==1) or (2167>4669)) then FlatIdent_4E7F8=1;break;end if ((FlatIdent_4F848==0) or (1338>2187)) then FlatIdent_555F7=0;A=nil;FlatIdent_4F848=1;end end end if ((FlatIdent_4E7F8==1) or (2525>3298)) then while true do if ((FlatIdent_555F7==0) or (1103>=1346)) then A=Inst[2];Stk[A]=Stk[A](Stk[A + 1]);break;end end break;end end break;end if ((1270<=4210) and (0==FlatIdent_3ABAE)) then FlatIdent_4E7F8=0;FlatIdent_555F7=nil;FlatIdent_3ABAE=1;end end elseif ((506<=4731) and (Inst[2]==Stk[Inst[4]])) then VIP=VIP + 1;else VIP=Inst[3];end elseif ((2072==2072) and (Enum<=31)) then if ((3551>=838) and (Enum==30)) then local FlatIdent_3722C=0;local FlatIdent_2929;local A;while true do if ((3393>2175) and (FlatIdent_3722C==0)) then FlatIdent_2929=0;A=nil;FlatIdent_3722C=1;end if ((3382==3382) and (FlatIdent_3722C==1)) then while true do if ((4259>1896) and (FlatIdent_2929==0)) then A=Inst[2];Stk[A](Unpack(Stk,A + 1,Top));break;end end break;end end else Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];end elseif ((1669<4598) and (Enum<=32)) then Stk[Inst[2]]();elseif ((Enum>33) or (790>=2000)) then Stk[Inst[2]]={};else VIP=Inst[3];end VIP=VIP + 1;break;end if ((2536>1984) and (0==FlatIdent_437F8)) then local FlatIdent_1DD68=0;local FlatIdent_87E4;while true do if ((FlatIdent_1DD68==0) or (2269<350)) then FlatIdent_87E4=0;while true do if ((1601==1601) and (FlatIdent_87E4==0)) then local FlatIdent_26295=0;while true do if ((FlatIdent_26295==1) or (312>=4608)) then FlatIdent_87E4=1;break;end if ((413<=487) and (FlatIdent_26295==0)) then Inst=Instr[VIP];Enum=Inst[1];FlatIdent_26295=1;end end end if ((4514>4499) and (FlatIdent_87E4==1)) then FlatIdent_437F8=1;break;end end break;end end end end break;end end end end A,B=_R(PCall(Loop));if  not A[1] then local FlatIdent_4B6A6=0;local line;while true do if (0==FlatIdent_4B6A6) then line=Chunk[4][VIP] or "?";error("Script error at ["   .. line   .. "]:"   .. A[2]);break;end end else return Unpack(A,2,B);end end;end end end;return Wrap(Deserialize(),{},vmenv)(...);end if (FlatIdent_25A6D==2) then gBits16=function()local FlatIdent_77E3F=0;local a;local b;while true do if (FlatIdent_77E3F==1) then return (b * 256) + a;end if (FlatIdent_77E3F==0) then a,b=Byte(ByteString,DIP,DIP + 2);DIP=DIP + 2;FlatIdent_77E3F=1;end end end;gBits32=nil;gBits32=function()local a,b,c,d=Byte(ByteString,DIP,DIP + 3);DIP=DIP + 4;return (d * 16777216) + (c * 65536) + (b * 256) + a;end;gFloat=nil;FlatIdent_25A6D=3;end if (FlatIdent_25A6D==4) then _R=nil;_R=function(...)return {...},Select("#",...);end;Deserialize=nil;Deserialize=function()local Instrs={};local Functions={};local Lines={};local Chunk={Instrs,Functions,nil,Lines};local ConstCount=gBits32();local Consts={};for Idx=1,ConstCount do local Type=gBits8();local Cons;if (Type==1) then Cons=gBits8()~=0;elseif (Type==2) then Cons=gFloat();elseif (Type==3) then Cons=gString();end Consts[Idx]=Cons;end Chunk[3]=gBits8();for Idx=1,gBits32() do local FlatIdent_6E558=0;local Descriptor;while true do if (FlatIdent_6E558==0) then Descriptor=gBits8();if (gBit(Descriptor,1,1)==0) then local FlatIdent_24DC3=0;local Type;local Mask;local Inst;while true do if (FlatIdent_24DC3==3) then if (gBit(Mask,3,3)==1) then Inst[4]=Consts[Inst[4]];end Instrs[Idx]=Inst;break;end if (1==FlatIdent_24DC3) then Inst={gBits16(),gBits16(),nil,nil};if (Type==0) then local FlatIdent_6A89E=0;while true do if (FlatIdent_6A89E==0) then Inst[3]=gBits16();Inst[4]=gBits16();break;end end elseif (Type==1) then Inst[3]=gBits32();elseif (Type==2) then Inst[3]=gBits32() -(2^16);elseif (Type==3) then Inst[3]=gBits32() -(2^16);Inst[4]=gBits16();end FlatIdent_24DC3=2;end if (0==FlatIdent_24DC3) then Type=gBit(Descriptor,2,3);Mask=gBit(Descriptor,4,6);FlatIdent_24DC3=1;end if (FlatIdent_24DC3==2) then if (gBit(Mask,1,1)==1) then Inst[2]=Consts[Inst[2]];end if (gBit(Mask,2,2)==1) then Inst[3]=Consts[Inst[3]];end FlatIdent_24DC3=3;end end end break;end end end for Idx=1,gBits32() do Functions[Idx-1]=Deserialize();end for Idx=1,gBits32() do Lines[Idx]=gBits32();end return Chunk;end;FlatIdent_25A6D=5;end if (FlatIdent_25A6D==0) then DIP=1;repeatNext=nil;ByteString=Subg(Sub(ByteString,5),"..",function(byte)if (Byte(byte,2)==79) then local FlatIdent_5C046=0;while true do if (0==FlatIdent_5C046) then repeatNext=StrToNumber(Sub(byte,1,1));return "";end end else local FlatIdent_2D59E=0;local a;while true do if (FlatIdent_2D59E==0) then a=Char(StrToNumber(byte,16));if repeatNext then local FlatIdent_40E36=0;local b;while true do if (FlatIdent_40E36==1) then return b;end if (FlatIdent_40E36==0) then b=Rep(a,repeatNext);repeatNext=nil;FlatIdent_40E36=1;end end else return a;end break;end end end end);gBit=nil;FlatIdent_25A6D=1;end end end;VMCalletFEnv(),...);break;end if (FlatIdent_22608==0) then StrToNumber=tonumber;Byte=string.byte;Char=string.char;FlatIdent_22608=1;end if (FlatIdent_22608==2) then Concat=table.concat;Insert=table.insert;GetFEnv=getfenv or function()return _ENV;end;FlatIdent_22608=3;end if (FlatIdent_22608==4) then Unpack=unpack or table.unpack;ToNumber=tonumber;VMCall=nil;FlatIdent_22608=5;end end end
